\set ON_ERROR_STOP
BEGIN;
CREATE UNIQUE INDEX "idx_account_windows_sid" ON "public"."account" ("windows_sid" ASC)
WHERE ((windows_sid IS NOT NULL));
CREATE UNIQUE INDEX "uq_customer_vat_id" ON "public"."customer" ("vat_id" ASC)
WHERE ((vat_id<>''));
COMMENT ON INDEX "public"."uq_customer_vat_id" IS 'Обеспечивает уникальность ИНН';
CREATE UNIQUE INDEX "ix_equipment_modem_identifier" ON "public"."equipment" ("equipment_model_id" ASC,"modem_identifier" ASC)
WHERE ((modem_identifier IS NOT NULL));
CREATE UNIQUE INDEX "ix_equipment_poll_port_id" ON "public"."equipment" ("modem_poll_port_id" ASC)
WHERE ((modem_poll_port_id IS NOT NULL));
CREATE UNIQUE INDEX "ix_measure_point_number" ON "public"."measure_point" ("measure_point_service_number" ASC)
WHERE ((measure_point_service_number IS NOT NULL));
CREATE UNIQUE INDEX "ix_node_number" ON "public"."node" ("number" ASC)
WHERE ((number IS NOT NULL));
CREATE INDEX "ix_node_supplier_supplier_id" ON "public"."node_supplier" ("supplier_id" ASC)
WHERE ((supplier_id IS NOT NULL));
CREATE UNIQUE INDEX "ix_personal_account_personal_account_number" ON "public"."personal_account" ("node_id" ASC,"personal_account_number" ASC)
WHERE ((personal_account_number<>''));
CREATE UNIQUE INDEX "ix_poll_connection_dial_number" ON "public"."poll_connection" ("dial_number" ASC)
WHERE ((((comm_link_type IN ((2), (4))) AND comm_device_equipment_id IS NULL)));
CREATE UNIQUE INDEX "ix_poll_connection_internet_host_port" ON "public"."poll_connection" ("internet_host" ASC,"internet_port" ASC)
WHERE (((comm_link_type=(16) AND comm_device_equipment_id IS NULL)));
CREATE UNIQUE INDEX "ix_poll_port_poll_service_id_gprs_listen_port" ON "public"."poll_port" ("poll_service_id" ASC,"gprs_listen_port" ASC)
WHERE ((poll_port_communication_link_type=(8)));
CREATE UNIQUE INDEX "ix_poll_port_poll_service_port_number" ON "public"."poll_port" ("poll_service_id" ASC,"poll_port_port_number" ASC)
WHERE ((poll_port_communication_link_type IN ((1), (2), (4))));
CREATE UNIQUE INDEX "ix_poll_service_token" ON "public"."poll_service" ("token" ASC)
WHERE ((token IS NOT NULL));
ALTER TABLE "public"."account" ADD CONSTRAINT "ck_account_report_center_form_mode" CHECK ((report_center_form_mode>=(0) AND report_center_form_mode<=(1)));
ALTER TABLE "public"."account_log" ADD CONSTRAINT "ck_account_log_importance" CHECK ((importance=(16) OR (importance=(8) OR (importance=(4) OR (importance=(2) OR importance=(1))))));
ALTER TABLE "public"."account_node" ADD CONSTRAINT "ck_account_node_measure_point_check_access_mode" CHECK ((measure_point_check_access_mode=(1) OR measure_point_check_access_mode=(0)));
ALTER TABLE "public"."adapter" ADD CONSTRAINT "ck_adapter" CHECK (len(title)>(0));
ALTER TABLE "public"."cell" ADD CONSTRAINT "ck_cell_device_data_type" CHECK ((device_data_type=(128) OR (device_data_type=(64) OR (device_data_type=(32) OR (device_data_type=(4) OR device_data_type=(0))))));
ALTER TABLE "public"."complex" ADD CONSTRAINT "ck_complex_adapter" CHECK ((adapter_id IS NULL OR dbo].[is_supported_adapter]([equipment_id],[adapter_id)=(1)));
ALTER TABLE "public"."contingency" ADD CONSTRAINT "ck_contingency_node_id_measure_point_id" CHECK ((NOT (node_id IS NULL AND measure_point_id IS NULL)));
ALTER TABLE "public"."contingency" ADD CONSTRAINT "ck_contingency_start_date_end_date" CHECK (start_date]<=[end_date);
ALTER TABLE "public"."contract_consumption" ADD CONSTRAINT "ck_resource_load_year" CHECK (((1998)<year AND year<(2050)));
ALTER TABLE "public"."contract_consumption_limit" ADD CONSTRAINT "ck_consumption_limit_year" CHECK (((1998)<year AND year<(2050)));
ALTER TABLE "public"."contract_temperature" ADD CONSTRAINT "ck_contract_temperature_t_in" CHECK ((t_in>=(19) AND t_in<=(150)));
ALTER TABLE "public"."contract_temperature" ADD CONSTRAINT "ck_contract_temperature_t_out" CHECK ((t_out>=(19) AND t_out<=(70)));
ALTER TABLE "public"."contract_temperature" ADD CONSTRAINT "ck_contract_temperature_t_outdoor" CHECK ((t_outdoor>=(-60) AND t_outdoor<=(19)));
ALTER TABLE "public"."custom_attribute" ADD CONSTRAINT "ck_custom_attribute_entities" CHECK ((entities=(1) OR (entities=(2) OR entities=(3))));
ALTER TABLE "public"."customer" ADD CONSTRAINT "ck_customer_vat_id" CHECK ((len(vat_id)=(0) OR (is_natural_person=(0) AND (len(vat_id)=(10) OR (is_natural_person=(1) AND len(vat_id)=(12))))));
ALTER TABLE "public"."data_interface" ADD CONSTRAINT "ck_data_interface_max_network_size" CHECK (max_network_size>=(0));
ALTER TABLE "public"."data_interface" ADD CONSTRAINT "ck_data_interface_network_address_range" CHECK ((network_address_range_min=(0) AND (network_address_range_max=(0) OR network_address_range_min]<[network_address_range_max)));
ALTER TABLE "public"."data_interface" ADD CONSTRAINT "ck_data_interface_network_address_usage" CHECK ((network_address_usage>=(0) AND network_address_usage<=(4)));
ALTER TABLE "public"."data_interface" ADD CONSTRAINT "ck_data_interface_supported_port_speeds" CHECK (supported_port_speeds>=(0));
ALTER TABLE "public"."data_status" ADD CONSTRAINT "ck_data_status_data_status" CHECK ((data_status=(4) OR (data_status=(3) OR (data_status=(2) OR (data_status=(1) OR data_status=(0))))));
ALTER TABLE "public"."data_status" ADD CONSTRAINT "ck_data_status_device_data_type" CHECK ((device_data_type=(128) OR (device_data_type=(64) OR device_data_type=(32))));
ALTER TABLE "public"."data_status" ADD CONSTRAINT "ck_data_status_start_date_end_date" CHECK (start_date]<=[end_date);
ALTER TABLE "public"."device_address" ADD CONSTRAINT "ck_device_address_archive_depth" CHECK ((archive_depth=(0) OR (device_data_type&(128))=(128) AND ((archive_depth=(64) OR (archive_depth=(32) OR (archive_depth=(16)) OR (device_data_type&(32))=(32) AND ((archive_depth=(48) OR archive_depth=(12))))))));
ALTER TABLE "public"."device_address" ADD CONSTRAINT "ck_device_address_device_data_type" CHECK ((device_data_type=(128) OR (device_data_type=(640) OR (device_data_type=(64) OR (device_data_type=(576) OR (device_data_type=(32) OR (device_data_type=(544) OR (device_data_type=(4) OR (device_data_type=(516) OR (device_data_type=(512) OR device_data_type=(0)))))))))));
ALTER TABLE "public"."device_cell" ADD CONSTRAINT "ck_device_cell_pulse_ratio" CHECK (pulse_ratio>=(0));
ALTER TABLE "public"."device_channel" ADD CONSTRAINT "ck_device_channel_channel_number" CHECK (channel_number<>(0));
ALTER TABLE "public"."device_event" ADD CONSTRAINT "ck_device_event_start_end_date" CHECK (start_date_time]<=[end_date_time);
ALTER TABLE "public"."driver_interface" ADD CONSTRAINT "ck_driver_interface_channel_count" CHECK (channel_count>=(0));
ALTER TABLE "public"."driver_interface" ADD CONSTRAINT "ck_driver_interface_driver_name" CHECK (len(driver_name)>(0));
ALTER TABLE "public"."driver_interface" ADD CONSTRAINT "ck_driver_interface_driver_status" CHECK ((driver_status>=(0) AND driver_status<=(2)));
ALTER TABLE "public"."driver_interface" ADD CONSTRAINT "ck_driver_interface_features" CHECK (features>=(0));
ALTER TABLE "public"."driver_interface" ADD CONSTRAINT "ck_driver_interface_memory_address" CHECK ((min_memory_address=(0) AND (max_memory_address=(0) OR min_memory_address]<[max_memory_address)));
ALTER TABLE "public"."driver_interface" ADD CONSTRAINT "ck_driver_interface_supported_data_types" CHECK (supported_data_types>=(0));
ALTER TABLE "public"."driver_interface" ADD CONSTRAINT "ck_driver_interface_totals_reset_threshold" CHECK ((totals_reset_threshold_m>=(0) AND totals_reset_threshold_q>=(0)));
ALTER TABLE "public"."electric_power" ADD CONSTRAINT "ck_measure_point_power_interval" CHECK (interval>(0));
ALTER TABLE "public"."equipment" ADD CONSTRAINT "ck_equipment_serial_number" CHECK (len(serial_number)>(0));
ALTER TABLE "public"."equipment_history" ADD CONSTRAINT "ck_equipment_history_action" CHECK ((action=(1) OR (action=(2) OR (action=(3) OR (action=(4) OR action=(5))))));
ALTER TABLE "public"."equipment_model_modification" ADD CONSTRAINT "ck_equipment_model_modification_flow_sensor" CHECK ((flow_sensor_min=(0) AND (flow_sensor_max=(0) OR flow_sensor_min]<[flow_sensor_max)));
ALTER TABLE "public"."equipment_model_modification" ADD CONSTRAINT "ck_equipment_model_modification_nominal_diameter" CHECK (nominal_diameter>=(0));
ALTER TABLE "public"."equipment_model_modification" ADD CONSTRAINT "ck_equipment_model_modification_press_sensor" CHECK ((press_sensor_min=(0) AND (press_sensor_max=(0) OR press_sensor_min]<[press_sensor_max)));
ALTER TABLE "public"."equipment_model_modification" ADD CONSTRAINT "ck_equipment_model_modification_relative_error" CHECK (relative_error>=(0));
ALTER TABLE "public"."equipment_model_modification" ADD CONSTRAINT "ck_equipment_model_modification_temp_sensor" CHECK ((temp_sensor_min=(0) AND (temp_sensor_max=(0) OR temp_sensor_min]<[temp_sensor_max)));
ALTER TABLE "public"."gprs_controller_session" ADD CONSTRAINT "ck_gprs_controller_session_end_reason" CHECK ((end_reason>=(0) AND end_reason<=(8)));
ALTER TABLE "public"."ipaddress" ADD CONSTRAINT "ck_ip_address_range_end_ip" CHECK ((range_end_ip>=(0) AND range_end_ip<=(4294967295.)));
ALTER TABLE "public"."ipaddress" ADD CONSTRAINT "ck_ip_address_start_ip" CHECK ((range_start_ip>=(0) AND range_start_ip<=(4294967295.)));
ALTER TABLE "public"."map_object_appearance" ADD CONSTRAINT "ck_map_object_appearance_font_style" CHECK (((0)<=font_style AND font_style<=(15)));
ALTER TABLE "public"."map_object_appearance" ADD CONSTRAINT "ck_map_object_appearance_text_alignment" CHECK (((text_valignment=(2) OR (text_valignment=(1) OR text_valignment=(0)))) AND ((text_halignment=(2) OR (text_halignment=(1) OR text_halignment=(0)))));
ALTER TABLE "public"."map_object_appearance" ADD CONSTRAINT "ck_map_object_appearance_type" CHECK ((appearance_type=(2) OR (appearance_type=(1) OR appearance_type=(0))));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_calculate_missing_hour_consumption" CHECK ((calculate_missing_hour_consumption=(0) OR (calculate_missing_hour_consumption=(2) OR (calculate_missing_hour_consumption=(4) OR (calculate_missing_hour_consumption=(3) AND measure_point_system_type_id=(32))))));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_current_ratio" CHECK ((current_ratio>(0) AND current_ratio<=(40000)));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_device_pressure_type" CHECK ((device_pressure_type=(1) OR device_pressure_type=(2)));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_node_personal_account" CHECK ((measure_point_type=(0) AND (measure_point_node_id IS NOT NULL AND (personal_account_id IS NULL OR (measure_point_type=(1) AND (personal_account_id IS NOT NULL AND measure_point_node_id IS NULL))))));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_reporting_day" CHECK (((1)<=reporting_day AND reporting_day<=(28)));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_reporting_hour" CHECK (((0)<=reporting_hour AND reporting_hour<=(23)));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_service_number" CHECK (measure_point_service_number>(0));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_state" CHECK ((measure_point_state=(3) OR (measure_point_state=(2) OR (measure_point_state=(1) OR measure_point_state=(0)))));
ALTER TABLE "public"."measure_point" ADD CONSTRAINT "ck_measure_point_voltage_ratio" CHECK ((voltage_ratio>(0) AND voltage_ratio<=(11500)));
ALTER TABLE "public"."measure_point_data_copy_settings" ADD CONSTRAINT "ck_measure_point_data_copy_settings" CHECK (target_measure_point_id]<>[source_measure_point_id);
ALTER TABLE "public"."measure_point_expression" ADD CONSTRAINT "ck_measure_point_expression_expression" CHECK (len(expression)<>(0));
ALTER TABLE "public"."modem_type" ADD CONSTRAINT "ck_modem_type_communication_link_type" CHECK ((modem_type_communication_link_type=(16) OR (modem_type_communication_link_type=(8) OR ((modem_type_communication_link_type=(4) OR ((modem_type_communication_link_type=(2) OR modem_type_communication_link_type=(1))))))));
ALTER TABLE "public"."node" ADD CONSTRAINT "ck_node" CHECK (license_count>(0));
ALTER TABLE "public"."node" ADD CONSTRAINT "ck_node_is_communal_poll_enabled" CHECK ((is_communal_poll_enabled=(0) OR (is_communal_poll_enabled=(1) AND type=(2))));
ALTER TABLE "public"."node" ADD CONSTRAINT "ck_node_norms" CHECK ((norm_cold_water>=(0) AND (norm_hot_water>=(0) AND (norm_heat>=(0) AND (norm_electricity>=(0) AND norm_gas>=(0))))));
ALTER TABLE "public"."node" ADD CONSTRAINT "ck_node_number" CHECK (number>(0));
ALTER TABLE "public"."node" ADD CONSTRAINT "ck_node_type" CHECK ((type=(2) OR type=(1)));
ALTER TABLE "public"."node" ADD CONSTRAINT "ck_temp_comp_analysis_type" CHECK ((temperature_compliance_analysis_type=(0) OR (temperature_compliance_analysis_type=(1) OR temperature_compliance_analysis_type=(2))));
ALTER TABLE "public"."node_geo_location" ADD CONSTRAINT "ck_node_geo_location_latitude" CHECK (((-90)<=latitude AND latitude<=(90)));
ALTER TABLE "public"."node_geo_location" ADD CONSTRAINT "ck_node_geo_location_longitude" CHECK (((-180)<=longitude AND longitude<=(180)));
ALTER TABLE "public"."node_job" ADD CONSTRAINT "ck_node_job_fact_end_date" CHECK ((state=(0) AND (fact_end_date IS NULL OR (state=(1) AND fact_end_date<>NULL))));
ALTER TABLE "public"."node_job" ADD CONSTRAINT "ck_node_job_start_date" CHECK ((start_date]<=[scheduled_end_date AND ((fact_end_date IS NULL OR fact_end_date]>=[start_date))));
ALTER TABLE "public"."node_job" ADD CONSTRAINT "ck_node_job_state" CHECK ((state>=(0) OR state<=(1)));
ALTER TABLE "public"."node_job" ADD CONSTRAINT "ck_node_job_type" CHECK ((type>=(0) OR type<=(6)));
ALTER TABLE "public"."node_user_diag_params" ADD CONSTRAINT "ck_node_user_diag_params_data_types" CHECK ((data_types&((((4)+(32))+(64))+(128)))<>(0) AND (data_types&~((((4)+(32))+(64))+(128)))=(0));
ALTER TABLE "public"."node_user_diag_params" ADD CONSTRAINT "ck_node_user_diag_params_expression" CHECK (len(expression)>(0));
ALTER TABLE "public"."node_user_diag_params" ADD CONSTRAINT "ck_node_user_diag_params_importance" CHECK ((importance=(2) OR importance=(4)));
ALTER TABLE "public"."node_user_diag_params" ADD CONSTRAINT "ck_node_user_diag_params_message" CHECK (len(message)>(0));
ALTER TABLE "public"."node_user_diag_params" ADD CONSTRAINT "ck_node_user_diag_params_seasons" CHECK ((seasons=(1) OR (seasons=(2) OR seasons=(3))));
ALTER TABLE "public"."node_user_diag_params" ADD CONSTRAINT "ck_node_user_diag_params_short_message" CHECK (len(short_message)>(0));
ALTER TABLE "public"."notification" ADD CONSTRAINT "ck_notification_importance" CHECK ((importance=(4) OR (importance=(2) OR importance=(1))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_comm_device" CHECK ((comm_link_type=(8) AND (comm_device_equipment_id IS NOT NULL OR comm_link_type<>(8))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_comm_device_port" CHECK ((comm_device_port_id IS NULL OR comm_device_equipment_id IS NOT NULL));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_comm_device_port_settings" CHECK ((comm_device_port_settings_id IS NULL OR comm_device_port_id IS NOT NULL));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_comm_link_type" CHECK ((comm_link_type=(16) OR (comm_link_type=(8) OR ((comm_link_type=(4) OR ((comm_link_type=(2) OR comm_link_type=(1))))))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_comm_link_type_protocol" CHECK ((comm_link_type=(4) AND (comm_link_protocol=(0) OR (comm_link_type=(4) AND (comm_link_protocol=(1) OR (comm_link_type=(4) AND (comm_link_protocol=(2) OR (comm_link_type=(4) AND (comm_link_protocol=(3) OR (comm_link_type=(16) AND (comm_link_protocol=(0) OR (comm_link_type=(16) AND (comm_link_protocol=(1) OR (comm_link_type=(1) AND (comm_link_protocol=(0) OR (comm_link_type=(2) AND (comm_link_protocol=(0) OR (comm_link_type=(8) AND comm_link_protocol=(0)))))))))))))))))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_connection_timeout" CHECK ((comm_link_type=(1) AND (connection_timeout=(0) OR (comm_link_type<>(1) AND connection_timeout>(0)))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_dial_number" CHECK (((comm_link_type=(4) OR (comm_link_type=(2)) AND (len(dial_number)>(0) OR (NOT (comm_link_type=(4) OR comm_link_type=(2)))))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_direct" CHECK ((comm_link_type<>(1) OR (port_speed<>(0) AND flow_control<>(0))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_gprs_call_type" CHECK ((gprs_call_type=(4) OR (gprs_call_type=(2) OR (gprs_call_type=(1) OR gprs_call_type=(0)))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_gprs_call_type_dial_number" CHECK ((gprs_call_type=(0) OR len(dial_number)>(0)));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_internet" CHECK ((comm_link_type<>(16) OR (comm_link_type=(16) AND (len(internet_host)>(0) AND (internet_port>(0) AND internet_port<(65536))))));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_poll_port" CHECK ((poll_port_id IS NULL OR poll_port_group_id IS NULL));
ALTER TABLE "public"."poll_connection" ADD CONSTRAINT "ck_poll_connection_port_speed" CHECK ((port_speed=(115200) OR (port_speed=(57600) OR ((port_speed=(38400) OR (port_speed=(28800) OR ((port_speed=(19200) OR (port_speed=(14400) OR ((port_speed=(9600) OR (port_speed=(4800) OR ((port_speed=(2400) OR (port_speed=(1200) OR ((port_speed=(600) OR ((port_speed=(300) OR port_speed=(0))))))))))))))))))));
ALTER TABLE "public"."poll_port" ADD CONSTRAINT "ck_poll_port_billing_model" CHECK ((billing_model=(0) OR billing_model=(1)));
ALTER TABLE "public"."poll_port" ADD CONSTRAINT "ck_poll_port_communication_link_type" CHECK ((poll_port_communication_link_type=(16) OR (poll_port_communication_link_type=(8) OR ((poll_port_communication_link_type=(4) OR ((poll_port_communication_link_type=(2) OR poll_port_communication_link_type=(1))))))));
ALTER TABLE "public"."poll_port" ADD CONSTRAINT "ck_poll_port_tariff_plan_included_minutes" CHECK (tariff_plan_included_minutes>=(0));
ALTER TABLE "public"."poll_session" ADD CONSTRAINT "ck_poll_session_poll_task_type" CHECK ((poll_task_type=(3) OR (poll_task_type=(2) OR (poll_task_type=(1) OR poll_task_type=(0)))));
ALTER TABLE "public"."poll_session" ADD CONSTRAINT "ck_poll_session_result_code" CHECK ((poll_session_result_code=(255) OR (poll_session_result_code=(254) OR (poll_session_result_code=(253) OR (poll_session_result_code=(28) OR (poll_session_result_code=(27) OR (poll_session_result_code=(26) OR (poll_session_result_code=(25) OR (poll_session_result_code=(24) OR (poll_session_result_code=(23) OR (poll_session_result_code=(22) OR (poll_session_result_code=(21) OR (poll_session_result_code=(20) OR (poll_session_result_code=(18) OR (poll_session_result_code=(17) OR (poll_session_result_code=(16) OR (poll_session_result_code=(15) OR (poll_session_result_code=(14) OR (poll_session_result_code=(13) OR (poll_session_result_code=(12) OR (poll_session_result_code=(11) OR (poll_session_result_code=(10) OR (poll_session_result_code=(9) OR (poll_session_result_code=(8) OR (poll_session_result_code=(7) OR (poll_session_result_code=(6) OR (poll_session_result_code=(5) OR (poll_session_result_code=(4) OR (poll_session_result_code=(2) OR (poll_session_result_code=(1) OR poll_session_result_code=(0)))))))))))))))))))))))))))))));
ALTER TABLE "public"."poll_task" ADD CONSTRAINT "ck_poll_task_execution_state" CHECK ((execution_state=(0) OR (execution_state=(1) OR execution_state=(2))));
ALTER TABLE "public"."poll_task" ADD CONSTRAINT "ck_poll_task_freq_interval" CHECK ((freq_type=(4) AND ((freq_interval>(0) AND (freq_interval<=(31)) OR freq_type=(8))) AND ((freq_interval>(0) AND (freq_interval<(128)) OR (freq_type=(16) AND ((freq_interval>(0) AND (freq_interval<=(31)) OR freq_type=(32))))))));
ALTER TABLE "public"."poll_task" ADD CONSTRAINT "ck_poll_task_last_attempt_result_code" CHECK ((last_attempt_result_code=(0) OR (last_attempt_result_code=(2) OR last_attempt_result_code=(5))));
ALTER TABLE "public"."poll_task" ADD CONSTRAINT "ck_poll_task_priority" CHECK ((priority=(5) OR (priority=(4) OR (priority=(3) OR (priority=(2) OR (priority=(1) OR priority=(0)))))));
ALTER TABLE "public"."poll_task" ADD CONSTRAINT "ck_poll_task_start_end_datetime" CHECK (end_datetime]>[start_datetime);
ALTER TABLE "public"."poll_task" ADD CONSTRAINT "ck_poll_task_type" CHECK ((type=(3) OR (type=(2) OR (type=(1) OR type=(0)))));
ALTER TABLE "public"."report" ADD CONSTRAINT "ck_report_period_day" CHECK ((period_start_month]=[period_end_month AND (period_start_day]<=[period_end_day OR period_start_month]<[period_end_month)));
ALTER TABLE "public"."report" ADD CONSTRAINT "ck_report_period_end_day" CHECK (period_end_day<=(31));
ALTER TABLE "public"."report" ADD CONSTRAINT "ck_report_period_end_month" CHECK ((period_end_month=(1) OR period_end_month=(0)));
ALTER TABLE "public"."report" ADD CONSTRAINT "ck_report_period_month" CHECK (period_start_month]<=[period_end_month);
ALTER TABLE "public"."report" ADD CONSTRAINT "ck_report_period_start_day" CHECK (period_start_day<=(31));
ALTER TABLE "public"."report" ADD CONSTRAINT "ck_report_period_start_month" CHECK ((period_start_month=(1) OR period_start_month=(0)));
ALTER TABLE "public"."report" ADD CONSTRAINT "ck_report_report_type" CHECK ((report_type>=(1) AND report_type<=(33)));
ALTER TABLE "public"."report_parameter_property" ADD CONSTRAINT "ck_value_type" CHECK ((value_type>=(1) AND value_type<=(5)));
ALTER TABLE "public"."report_template" ADD CONSTRAINT "ck_report_template_estimation_algorithm" CHECK ((estimation_algorithm>=(0) AND estimation_algorithm<=(2)));
ALTER TABLE "public"."report_template" ADD CONSTRAINT "ck_report_template_is_user" CHECK ((is_user=(1) AND (text IS NOT NULL OR (is_user=(0) AND text IS NULL))));
ALTER TABLE "public"."report_template" ADD CONSTRAINT "ck_report_template_report_type" CHECK ((report_type>=(1) AND report_type<=(33)));
ALTER TABLE "public"."room_contract_consumption" ADD CONSTRAINT "ck_room_contract_consumption_month_number" CHECK ((month_number>=(1) AND month_number<=(12)));
ALTER TABLE "public"."serviceman" ADD CONSTRAINT "ck_serviceman_name" CHECK (len(name)>(0));
ALTER TABLE "public"."supplier" ADD CONSTRAINT "ck_supplier_system_type_mask" CHECK ((system_type_mask>(0) AND system_type_mask<(128)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_account_log_storage_time" CHECK (((1)<=account_log_storage_time AND account_log_storage_time<=(10000)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_default_cold_water_temp" CHECK ((default_cold_water_temp<=(20) AND default_cold_water_temp>=(0)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_default_return_pressure" CHECK (((1)<=default_return_pressure AND default_return_pressure<=(20)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_default_supply_pressure" CHECK (((1)<=default_supply_pressure AND default_supply_pressure<=(20)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_device_request_retry_count" CHECK (((1)<=device_request_retry_count AND device_request_retry_count<=(99)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_email_log_storage_time" CHECK (((1)<=email_log_storage_time AND email_log_storage_time<=(10000)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_gsm_modem_baud_rate" CHECK ((gsm_modem_baud_rate=(115200) OR (gsm_modem_baud_rate=(57600) OR (gsm_modem_baud_rate=(38400) OR (gsm_modem_baud_rate=(28800) OR (gsm_modem_baud_rate=(19200) OR (gsm_modem_baud_rate=(14400) OR (gsm_modem_baud_rate=(9600) OR (gsm_modem_baud_rate=(4800) OR (gsm_modem_baud_rate=(2400) OR gsm_modem_baud_rate=(1200)))))))))));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_gsm_modem_com_port_number" CHECK (gsm_modem_com_port_number>(0));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_gsm_modem_flow_control" CHECK ((gsm_modem_flow_control=(4) OR (gsm_modem_flow_control=(2) OR gsm_modem_flow_control=(1))));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_max_multipart_sms_part_count" CHECK (((1)<=max_part_count_in_multipart_sms AND max_part_count_in_multipart_sms<=(10)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_minimum_password_length" CHECK (((1)<=minimum_password_length AND minimum_password_length<=(30)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_notification_admission_date_notify_day_count" CHECK ((notification_admission_date_notify_day_count>(0) AND notification_admission_date_notify_day_count<=(360)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_poll_log_level" CHECK ((poll_log_level=(16) OR (poll_log_level=(8) OR (poll_log_level=(4) OR (poll_log_level=(2) OR poll_log_level=(1))))));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_poll_log_storage_time" CHECK (((1)<=poll_log_storage_time AND poll_log_storage_time<=(10000)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_poll_max_duration" CHECK (((1)<=poll_max_duration AND poll_max_duration<=(180)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_poll_max_time_diff" CHECK (((0)<=poll_max_time_diff AND poll_max_time_diff<=(86400)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_poll_port_block_error_count" CHECK (((1)<=poll_port_block_error_count AND poll_port_block_error_count<=(50)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_poll_port_block_timeout" CHECK (((1)<=poll_port_block_timeout AND poll_port_block_timeout<=(120)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_pressure_display_type" CHECK ((pressure_display_type=(1) OR pressure_display_type=(0)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_smtp_port" CHECK ((smtp_port>=(0) AND smtp_port<=(65535)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_system_log_storage_time" CHECK (((1)<=system_log_storage_time AND system_log_storage_time<=(10000)));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_updater_data_base_backup_mode" CHECK ((updater_data_base_backup_mode=(2) OR (updater_data_base_backup_mode=(1) OR updater_data_base_backup_mode=(0))));
ALTER TABLE "public"."system_parameters" ADD CONSTRAINT "ck_system_parameters_user_session_log_storage_time" CHECK (((1)<=user_session_log_storage_time AND user_session_log_storage_time<=(10000)));
ALTER TABLE "public"."task" ADD CONSTRAINT "ck_task_freq_interval" CHECK ((freq_type=(4) AND ((freq_interval>(0) AND (freq_interval<=(31)) OR freq_type=(8))) AND ((freq_interval>(0) AND (freq_interval<(128)) OR (freq_type=(16) AND ((freq_interval>(0) AND (freq_interval<=(31)) OR freq_type=(32))))))));
ALTER TABLE "public"."task" ADD CONSTRAINT "ck_task_start_end_time" CHECK ((start_time]<=[end_time AND (start_time>=(0) AND (end_time>=(0) AND (start_time<=(1439) AND end_time<=(1439))))));
ALTER TABLE "public"."task" ADD CONSTRAINT "ck_task_type" CHECK ((type=(13) OR (type=(12) OR (type=(11) OR (type=(10) OR (type=(9) OR (type=(8) OR (type=(7) OR (type=(6) OR (type=(5) OR (type=(4) OR (type=(3) OR (type=(2) OR type=(1))))))))))))));
ALTER TABLE "public"."territory" ADD CONSTRAINT "ck_territory_name" CHECK (len(name)>(0));
ALTER TABLE "public"."unit" ADD CONSTRAINT "ck_unit" CHECK (unit_id>(0));
ALTER TABLE "public"."user_session_log" ADD CONSTRAINT "ck_user_session_log_exit_code" CHECK ((exit_code>=(0) AND exit_code<=(9)));
ALTER TABLE "public"."version" ADD CONSTRAINT "ck_version_build" CHECK (build>(0));
ALTER TABLE "public"."version" ADD CONSTRAINT "ck_version_version" CHECK (len(version)>(0));
ALTER TABLE "public"."water_estimated_consumption" ADD CONSTRAINT "ck_water_estimated_consumption" CHECK ((estimation_algorithm>=(1) AND estimation_algorithm<=(2)));
COMMENT ON CONSTRAINT "fk_complex_protocol_type" ON "public"."complex" IS 'Протокол обмена с устройством (для устройств, поддерживающих более одного протокола обмена)';
COMMENT ON CONSTRAINT "ck_contingency_node_id_measure_point_id" ON "public"."contingency" IS 'Нештатная ситуация всегда должна быть связана либо с объектом учета, либо с точкой учета.';
COMMENT ON CONSTRAINT "ck_customer_vat_id" ON "public"."customer" IS 'Проверяет длину ИНН (10 символов для юридических лиц и 12 символов для физических лиц)';
COMMENT ON CONSTRAINT "fk_data_status_measure_point" ON "public"."data_status" IS 'Точка учета, по которой хранится состояние месячных данных';
COMMENT ON CONSTRAINT "pk_device_measure_point" ON "public"."device_measure_point" IS 'Обеспечивает выполнение условия, что одна точка учета может быть подключена только к одному устройству';
COMMENT ON CONSTRAINT "fk_measure_point_node" ON "public"."measure_point" IS 'Точка учета должна входить в объект учета (за исключением квартирных ТУР)';
COMMENT ON CONSTRAINT "ck_measure_point_current_ratio" ON "public"."measure_point" IS 'Первичные номинальные токи по ГОСТ 7746-2001: 1; 5; 10; 15; 20; 30; 40; 50; 75; 80; 100; 150; 200; 300; 400; 500; 600; 750; 800; 1000;  1200; 500;  2000;  3000;  4000; 5000;  6000;  8000;  10000;  12000; 14000;  16000; 18000;  20000;  25000; 28000; 30000; 32000; 35000; 40000 А.
Вторичные токи выбираются из ряда 1; 2 и 5 А.';
COMMENT ON CONSTRAINT "ck_measure_point_voltage_ratio" ON "public"."measure_point" IS 'Первичные номинальные токи по ГОСТ 7746-2001: 0,1; 0,4; 0,66; 3; 6; 10; 15; 20; 24; 27; 35; 110; 150; 220; 330; 500; 750; 1150 кВ.
Вторичные токи выбираются из ряда 100; 110; 127; 220 и 400 В.';
ALTER TABLE "public"."node" ALTER COLUMN "min_outdoor_temp" SET DEFAULT (-31);
ALTER TABLE "public"."task" ALTER COLUMN "start_date_time" SET DEFAULT CURRENT_TIMESTAMP;
CREATE FUNCTION "public".trig_func_ins_or_upd() RETURNS trigger LANGUAGE plpgsql AS $def$
begin
  NEW.Length=datalength(NEW.Content);
  RETURN NEW;
end;
$def$;
CREATE TRIGGER trig_ins_or_upd before insert or update ON public.NodeFile for each row execute procedure public.trig_func_ins_or_upd();
COMMIT;
