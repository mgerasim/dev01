/**
	Scripted by Migrate2Postgres 1.0.7 on Wed, 3 Oct 2018 04:54:48 +0300

	Migrate2Postgres Copyright (C) 2018 Igal Sapir
	This program comes with ABSOLUTELY NO WARRANTY;
	This is free software, and you are welcome to redistribute it
	under certain conditions;
	See https://www.gnu.org/licenses/gpl-3.0.txt for details
	
	Available at https://github.com/isapir/Migrate2Postgres
**/

BEGIN TRANSACTION;

CREATE SCHEMA IF NOT EXISTS public;


DROP TABLE IF EXISTS public.access_right;
CREATE TABLE public.access_right (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,const_name          	TEXT        	NOT NULL
	,group_title         	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.account;
CREATE TABLE public.account (
	 account_id          	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,account_login       	TEXT        	NOT NULL
	,account_display_name	TEXT        	NOT NULL
	,account_disabled    	BOOLEAN     	NOT NULL
	,account_description 	TEXT        	NOT NULL
	,account_password_set_date	TIMESTAMPTZ 	NOT NULL
	,account_disabled_date	TIMESTAMPTZ
	,account_expiration_date	TIMESTAMPTZ
	,account_session_timeout	INT         	NOT NULL
	,account_session_count	INT         	NOT NULL
	,account_ip_address_mode	BOOLEAN     	NOT NULL
	,account_last_login_date	TIMESTAMPTZ
	,account_is_system   	BOOLEAN     	NOT NULL
	,mobile_phone        	TEXT        	NOT NULL
	,email               	TEXT        	NOT NULL
	,sms_email           	TEXT        	NOT NULL
	,send_sms_via_modem  	BOOLEAN     	NOT NULL
	,notify_start_time   	INT         	NOT NULL
	,notify_end_time     	INT         	NOT NULL
	,password            	BYTEA       	NOT NULL
	,salt                	BYTEA       	NOT NULL
	,has_all_node_access 	BOOLEAN     	NOT NULL
	,start_page          	INT         	NOT NULL
	,tenant_office_only  	BOOLEAN     	NOT NULL
	,allow_all_reports   	BOOLEAN     	NOT NULL
	,disable_password_change	BOOLEAN     	NOT NULL
	,password_reset_token	TEXT        	NOT NULL
	,password_reset_token_expire_date_time	TIMESTAMPTZ
	,allow_all_maps      	BOOLEAN     	NOT NULL
	,report_center_form_mode	INT         	NOT NULL  DEFAULT 0
	,use_send_interval_for_email	BOOLEAN     	NOT NULL
	,authentication_modes	INT         	NOT NULL
	,windows_sid         	TEXT
	,division_id         	INT
	,login_not_allowed   	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.account_group;
CREATE TABLE public.account_group (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,is_system           	BOOLEAN     	NOT NULL
	,division_id         	INT
);

DROP TABLE IF EXISTS public.account_group_membership;
CREATE TABLE public.account_group_membership (
	 account_id          	INT         	NOT NULL
	,account_group_id    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_group_permission_ex;
CREATE TABLE public.account_group_permission_ex (
	 account_group_id    	INT         	NOT NULL
	,access_right_id     	INT         	NOT NULL
	,is_denied           	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.account_log;
CREATE TABLE public.account_log (
	 date                	TIMESTAMPTZ 	NOT NULL
	,account_id          	INT         	NOT NULL
	,importance          	INT         	NOT NULL
	,message             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.account_map;
CREATE TABLE public.account_map (
	 account_id          	INT         	NOT NULL
	,map_id              	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_measure_point;
CREATE TABLE public.account_measure_point (
	 account_id          	INT         	NOT NULL
	,measure_point_id    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_node;
CREATE TABLE public.account_node (
	 account_id          	INT         	NOT NULL
	,node_id             	INT         	NOT NULL
	,measure_point_check_access_mode	INT         	NOT NULL
	,allowed_system_types	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_node_group;
CREATE TABLE public.account_node_group (
	 account_id          	INT         	NOT NULL
	,node_group_id       	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_notification;
CREATE TABLE public.account_notification (
	 account_id          	INT         	NOT NULL
	,notification_id     	INT         	NOT NULL
	,is_read             	BOOLEAN     	NOT NULL  DEFAULT false
);

DROP TABLE IF EXISTS public.account_notification_incident;
CREATE TABLE public.account_notification_incident (
	 account_id          	INT         	NOT NULL
	,incident_type_id    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_notification_method;
CREATE TABLE public.account_notification_method (
	 account_id          	INT         	NOT NULL
	,notification_type_id	INT         	NOT NULL
	,notification_method_mask	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_notification_node;
CREATE TABLE public.account_notification_node (
	 account_id          	INT         	NOT NULL
	,notification_type_id	INT         	NOT NULL
	,node_id             	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_notification_node_job_type;
CREATE TABLE public.account_notification_node_job_type (
	 account_id          	INT         	NOT NULL
	,node_job_type       	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_permission_ex;
CREATE TABLE public.account_permission_ex (
	 account_id          	INT         	NOT NULL
	,access_right_id     	INT         	NOT NULL
	,is_denied           	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.account_personal_account;
CREATE TABLE public.account_personal_account (
	 account_id          	INT         	NOT NULL
	,personal_account_id 	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_report;
CREATE TABLE public.account_report (
	 account_id          	INT         	NOT NULL
	,report_id           	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.account_service_company;
CREATE TABLE public.account_service_company (
	 account_id          	INT         	NOT NULL
	,service_company_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.adapter;
CREATE TABLE public.adapter (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,is_address_required 	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.balance_group;
CREATE TABLE public.balance_group (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT
);

DROP TABLE IF EXISTS public.balance_group_measure_point;
CREATE TABLE public.balance_group_measure_point (
	 balance_group_id    	INT         	NOT NULL
	,measure_point_id    	INT         	NOT NULL
	,is_head             	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.cell;
CREATE TABLE public.cell (
	 id                  	INT         	NOT NULL
	,name                	TEXT        	NOT NULL
	,driver_code         	TEXT        	NOT NULL
	,device_data_type    	INT         	NOT NULL
	,equipment_model_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.complex;
CREATE TABLE public.complex (
	 complex_response_delay	INT         	NOT NULL  DEFAULT 0
	,complex_poll_session_id	INT
	,protocol_type_id    	INT
	,tag                 	BYTEA
	,adapter_id          	INT
	,adapter_address     	INT         	NOT NULL  DEFAULT 0
	,hardware_version    	TEXT
	,firmware_version    	TEXT
	,time_difference     	INT
	,battery_level       	REAL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.contingency;
CREATE TABLE public.contingency (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,measure_point_id    	INT
	,node_id             	INT         	NOT NULL
	,contingency_type_id 	INT         	NOT NULL
	,start_date          	TIMESTAMPTZ 	NOT NULL
	,end_date            	TIMESTAMPTZ 	NOT NULL
	,diag_date           	TIMESTAMPTZ 	NOT NULL
	,importance          	INT         	NOT NULL
	,is_closed           	BOOLEAN     	NOT NULL
	,description         	TEXT
	,sms_message         	TEXT
	,equipment_id        	INT
	,data_type           	INT         	NOT NULL
	,distinction         	BINARY
);

DROP TABLE IF EXISTS public.contingency_log;
CREATE TABLE public.contingency_log (
	 contingency_id      	INT         	NOT NULL
	,date                	TIMESTAMPTZ 	NOT NULL
	,message             	TEXT
	,short_message       	TEXT
);

DROP TABLE IF EXISTS public.contract_consumption;
CREATE TABLE public.contract_consumption (
	 measured_parameter_id	INT         	NOT NULL
	,year                	INT         	NOT NULL
	,jan                 	REAL          DEFAULT 0
	,feb                 	REAL          DEFAULT 0
	,mar                 	REAL          DEFAULT 0
	,apr                 	REAL          DEFAULT 0
	,may                 	REAL          DEFAULT 0
	,jun                 	REAL          DEFAULT 0
	,jul                 	REAL          DEFAULT 0
	,aug                 	REAL          DEFAULT 0
	,sep                 	REAL          DEFAULT 0
	,oct                 	REAL          DEFAULT 0
	,nov                 	REAL          DEFAULT 0
	,dec                 	REAL          DEFAULT 0
	,measure_point_id    	INT         	NOT NULL
	,contract_consumption_type	INT         	NOT NULL  DEFAULT 0
);

DROP TABLE IF EXISTS public.contract_consumption_limit;
CREATE TABLE public.contract_consumption_limit (
	 measure_point_id    	INT         	NOT NULL
	,measured_parameter_id	INT         	NOT NULL
	,year                	INT         	NOT NULL
	,jan                 	REAL          DEFAULT 0
	,feb                 	REAL          DEFAULT 0
	,mar                 	REAL          DEFAULT 0
	,apr                 	REAL          DEFAULT 0
	,may                 	REAL          DEFAULT 0
	,jun                 	REAL          DEFAULT 0
	,jul                 	REAL          DEFAULT 0
	,aug                 	REAL          DEFAULT 0
	,sep                 	REAL          DEFAULT 0
	,oct                 	REAL          DEFAULT 0
	,nov                 	REAL          DEFAULT 0
	,dec                 	REAL          DEFAULT 0
	,contract_consumption_type	INT         	NOT NULL  DEFAULT 0
);

DROP TABLE IF EXISTS public.contract_temperature;
CREATE TABLE public.contract_temperature (
	 node_id             	INT         	NOT NULL
	,t_outdoor           	INT         	NOT NULL
	,t_in                	REAL        	NOT NULL
	,t_out               	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.counter_totals;
CREATE TABLE public.counter_totals (
	 equipment_id        	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,value_1             	REAL        	NOT NULL
	,value_2             	REAL        	NOT NULL
	,is_trusted_value    	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.custom_attribute;
CREATE TABLE public.custom_attribute (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,code                	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,entities            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.customer;
CREATE TABLE public.customer (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,is_natural_person   	BOOLEAN     	NOT NULL
	,vat_id              	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.data_interface;
CREATE TABLE public.data_interface (
	 equipment_model_id  	INT         	NOT NULL
	,port_settings       	TEXT        	NOT NULL
	,supported_port_speeds	INT         	NOT NULL
	,supported_flow_controls	INT         	NOT NULL
	,default_password    	TEXT        	NOT NULL
	,password_reg_ex     	TEXT        	NOT NULL
	,password_comment    	TEXT        	NOT NULL
	,max_network_size    	INT         	NOT NULL
	,network_address_default	TEXT        	NOT NULL
	,network_address_usage	INT         	NOT NULL
	,network_address_comment	TEXT        	NOT NULL
	,network_address_reg_ex	TEXT        	NOT NULL
	,network_address_range_min	INT         	NOT NULL
	,network_address_range_max	INT         	NOT NULL
	,features            	INT         	NOT NULL
	,second_level_password_comment	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.data_parameter;
CREATE TABLE public.data_parameter (
	 id                  	INT         	NOT NULL
	,code                	TEXT        	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.data_status;
CREATE TABLE public.data_status (
	 measure_point_id    	INT         	NOT NULL
	,device_data_type    	INT         	NOT NULL
	,start_date          	TIMESTAMPTZ 	NOT NULL
	,end_date            	TIMESTAMPTZ 	NOT NULL
	,data_status         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.device_address;
CREATE TABLE public.device_address (
	 address             	INT         	NOT NULL
	,measure_point_id    	INT         	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,device_data_type    	INT         	NOT NULL
	,unit_id             	INT         	NOT NULL
	,archive_depth       	INT         	NOT NULL
	,equipment_id        	INT         	NOT NULL
	,multiplier          	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.device_cell;
CREATE TABLE public.device_cell (
	 cell_id             	INT         	NOT NULL
	,measure_point_id    	INT         	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,pulse_ratio         	REAL        	NOT NULL
	,unit_id             	INT
	,data_type           	INT         	NOT NULL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.device_channel;
CREATE TABLE public.device_channel (
	 heat_lead_in        	INT         	NOT NULL
	,channel_number      	INT         	NOT NULL
	,measure_point_id    	INT         	NOT NULL
	,is_supply_channel   	BOOLEAN     	NOT NULL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.device_config;
CREATE TABLE public.device_config (
	 date_time           	TIMESTAMPTZ 	NOT NULL
	,param_id            	INT         	NOT NULL
	,param_value         	TEXT        	NOT NULL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.device_config_param;
CREATE TABLE public.device_config_param (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,data_type           	VARCHAR(1)  	NOT NULL
	,general_device_config_param_id	INT
	,comment             	TEXT        	NOT NULL
	,heat_lead_in_num    	INT
	,channel_num         	INT
	,read_address        	INT
	,read_data_type      	INT
	,driver_code         	TEXT
	,equipment_model_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.device_data_type;
CREATE TABLE public.device_data_type (
	 id                  	INT         	NOT NULL
	,desc                	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.device_event;
CREATE TABLE public.device_event (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,start_date_time     	TIMESTAMPTZ
	,event_code          	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,heat_lead_in        	INT         	NOT NULL
	,archive_type        	INT         	NOT NULL
	,channel_number      	INT         	NOT NULL
	,end_date_time       	TIMESTAMPTZ
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.device_measure_point;
CREATE TABLE public.device_measure_point (
	 measure_point_id    	INT         	NOT NULL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.division;
CREATE TABLE public.division (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.driver_interface;
CREATE TABLE public.driver_interface (
	 equipment_model_id  	INT         	NOT NULL
	,driver_name         	TEXT        	NOT NULL
	,driver_status       	INT         	NOT NULL
	,channel_count       	INT         	NOT NULL
	,heat_system_count   	INT         	NOT NULL
	,min_memory_address  	INT         	NOT NULL
	,max_memory_address  	INT         	NOT NULL
	,features            	INT         	NOT NULL
	,supported_data_types	INT         	NOT NULL
	,totals_reset_threshold_m	REAL        	NOT NULL
	,totals_reset_threshold_q	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.dry_contact_state;
CREATE TABLE public.dry_contact_state (
	 date_time           	TIMESTAMPTZ 	NOT NULL
	,value               	INT         	NOT NULL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.eav_consumption_currents;
CREATE TABLE public.eav_consumption_currents (
	 measure_point_id    	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,is_bad              	BOOLEAN     	NOT NULL
	,is_calc             	BOOLEAN     	NOT NULL
	,is_interpolated     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eav_consumption_day;
CREATE TABLE public.eav_consumption_day (
	 measure_point_id    	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,is_bad              	BOOLEAN     	NOT NULL
	,is_calc             	BOOLEAN     	NOT NULL
	,is_interpolated     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eav_consumption_hour;
CREATE TABLE public.eav_consumption_hour (
	 measure_point_id    	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,is_bad              	BOOLEAN     	NOT NULL
	,is_calc             	BOOLEAN     	NOT NULL
	,is_interpolated     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eav_consumption_last;
CREATE TABLE public.eav_consumption_last (
	 measure_point_id    	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,data_type           	INT         	NOT NULL
	,attributes          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.eav_consumption_last_value;
CREATE TABLE public.eav_consumption_last_value (
	 measure_point_id    	INT         	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,is_bad              	BOOLEAN     	NOT NULL
	,is_calc             	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eav_consumption_month;
CREATE TABLE public.eav_consumption_month (
	 measure_point_id    	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,is_bad              	BOOLEAN     	NOT NULL
	,is_calc             	BOOLEAN     	NOT NULL
	,is_interpolated     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eav_totals_last;
CREATE TABLE public.eav_totals_last (
	 measure_point_id    	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,attributes          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.eav_totals_last_value;
CREATE TABLE public.eav_totals_last_value (
	 measure_point_id    	INT         	NOT NULL
	,data_parameter_id   	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,is_bad              	BOOLEAN     	NOT NULL
	,is_calc             	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.electric_consumption_day;
CREATE TABLE public.electric_consumption_day (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,ap_1                	REAL
	,an_1                	REAL
	,rp_1                	REAL
	,rn_1                	REAL
	,ap_2                	REAL
	,an_2                	REAL
	,rp_2                	REAL
	,rn_2                	REAL
	,ap_3                	REAL
	,an_3                	REAL
	,rp_3                	REAL
	,rn_3                	REAL
	,ap_4                	REAL
	,an_4                	REAL
	,rp_4                	REAL
	,rn_4                	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,interpolated_values 	INT
	,normal_operation_duration	REAL
);

DROP TABLE IF EXISTS public.electric_consumption_hour;
CREATE TABLE public.electric_consumption_hour (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,ap_1                	REAL
	,an_1                	REAL
	,rp_1                	REAL
	,rn_1                	REAL
	,ap_2                	REAL
	,an_2                	REAL
	,rp_2                	REAL
	,rn_2                	REAL
	,ap_3                	REAL
	,an_3                	REAL
	,rp_3                	REAL
	,rn_3                	REAL
	,ap_4                	REAL
	,an_4                	REAL
	,rp_4                	REAL
	,rn_4                	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,interpolated_values 	INT
	,normal_operation_duration	REAL
);

DROP TABLE IF EXISTS public.electric_consumption_month;
CREATE TABLE public.electric_consumption_month (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,ap_1                	REAL
	,an_1                	REAL
	,rp_1                	REAL
	,rn_1                	REAL
	,ap_2                	REAL
	,an_2                	REAL
	,rp_2                	REAL
	,rn_2                	REAL
	,ap_3                	REAL
	,an_3                	REAL
	,rp_3                	REAL
	,rn_3                	REAL
	,ap_4                	REAL
	,an_4                	REAL
	,rp_4                	REAL
	,rn_4                	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,interpolated_values 	INT
	,normal_operation_duration	REAL
);

DROP TABLE IF EXISTS public.electric_power;
CREATE TABLE public.electric_power (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,flags               	INT         	NOT NULL
	,interval            	INT         	NOT NULL
	,pp                  	REAL
	,pn                  	REAL
	,qp                  	REAL
	,qn                  	REAL
	,bad_values          	INT
);

DROP TABLE IF EXISTS public.electric_power_quality;
CREATE TABLE public.electric_power_quality (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,pp                  	REAL
	,pn                  	REAL
	,qp                  	REAL
	,qn                  	REAL
	,calculated_values   	BIGINT
	,bad_values          	BIGINT
	,s                   	REAL
	,sa                  	REAL
	,sb                  	REAL
	,sc                  	REAL
	,pa                  	REAL
	,pb                  	REAL
	,pc                  	REAL
	,qa                  	REAL
	,qb                  	REAL
	,qc                  	REAL
	,u                   	REAL
	,ua                  	REAL
	,ub                  	REAL
	,uc                  	REAL
	,i                   	REAL
	,ia                  	REAL
	,ib                  	REAL
	,ic                  	REAL
	,phi_uab             	REAL
	,phi_uac             	REAL
	,phi_ubc             	REAL
	,phi_uia             	REAL
	,phi_uib             	REAL
	,phi_uic             	REAL
	,frequency           	REAL
	,p                   	REAL
	,q                   	REAL
	,cos_phi             	REAL
	,cos_phi_a           	REAL
	,cos_phi_b           	REAL
	,cos_phi_c           	REAL
);

DROP TABLE IF EXISTS public.electric_totals;
CREATE TABLE public.electric_totals (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,ap_1                	REAL
	,an_1                	REAL
	,rp_1                	REAL
	,rn_1                	REAL
	,ap_2                	REAL
	,an_2                	REAL
	,rp_2                	REAL
	,rn_2                	REAL
	,ap_3                	REAL
	,an_3                	REAL
	,rp_3                	REAL
	,rn_3                	REAL
	,ap_4                	REAL
	,an_4                	REAL
	,rp_4                	REAL
	,rn_4                	REAL
	,flags               	INT         	NOT NULL
	,calculated_values   	INT
	,bad_values          	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,resetted_values     	INT
	,interpolated_values 	INT
	,normal_operation_duration	REAL
);

DROP TABLE IF EXISTS public.equipment;
CREATE TABLE public.equipment (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,equipment_model_id  	INT         	NOT NULL
	,serial_number       	TEXT        	NOT NULL
	,last_calibration_date	DATE
	,scheduled_calibration_date	DATE
	,modification_id     	INT
	,password            	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,modem_identifier    	TEXT
	,modem_poll_port_id  	INT
	,modem_imei          	TEXT
	,network_address     	TEXT
	,second_level_password	TEXT
	,is_shared           	BOOLEAN     	NOT NULL
	,modem_enable_keep_alive	BOOLEAN
	,division_id         	INT
);

DROP TABLE IF EXISTS public.equipment_history;
CREATE TABLE public.equipment_history (
	 id                  	BIGINT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,node_id             	INT         	NOT NULL
	,measure_point_id    	INT
	,action              	INT         	NOT NULL
	,equipment_model_id  	INT         	NOT NULL
	,serial_number       	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.equipment_model;
CREATE TABLE public.equipment_model (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,is_system           	BOOLEAN     	NOT NULL
	,long_title          	TEXT        	NOT NULL
	,title               	TEXT        	NOT NULL
	,capabilities        	INT         	NOT NULL
	,comment             	TEXT        	NOT NULL
	,serial_number_format	TEXT        	NOT NULL
	,serial_number_comment	TEXT        	NOT NULL
	,state_register_number	TEXT        	NOT NULL
	,calibration_interval	INT         	NOT NULL
	,is_temperature_sensor	BOOLEAN     	NOT NULL
	,is_pressure_sensor  	BOOLEAN     	NOT NULL
	,is_flow_sensor      	BOOLEAN     	NOT NULL
	,supported_system_types	INT         	NOT NULL
	,supported_comm_links	INT         	NOT NULL
	,supported_call_types	INT         	NOT NULL
	,modem_features      	INT         	NOT NULL
	,dry_contact_count   	INT         	NOT NULL
	,is_electric_meter   	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.equipment_model_adapter;
CREATE TABLE public.equipment_model_adapter (
	 equipment_model_id  	INT         	NOT NULL
	,adapter_id          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipment_model_modification;
CREATE TABLE public.equipment_model_modification (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,equipment_model_id  	INT         	NOT NULL
	,is_system           	BOOLEAN     	NOT NULL
	,comment             	TEXT        	NOT NULL
	,precision_class     	TEXT        	NOT NULL
	,nominal_diameter    	INT         	NOT NULL
	,relative_error      	REAL        	NOT NULL
	,temp_sensor_min     	REAL        	NOT NULL
	,temp_sensor_max     	REAL        	NOT NULL
	,press_sensor_min    	REAL        	NOT NULL
	,press_sensor_max    	REAL        	NOT NULL
	,flow_sensor_min     	REAL        	NOT NULL
	,flow_sensor_max     	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.equipment_model_port;
CREATE TABLE public.equipment_model_port (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,equipment_model_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipment_model_port_settings;
CREATE TABLE public.equipment_model_port_settings (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,equipment_model_port_id	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipment_poll_connection;
CREATE TABLE public.equipment_poll_connection (
	 equipment_id        	INT         	NOT NULL
	,node_id             	INT         	NOT NULL
	,poll_connection_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipment_poll_statistics;
CREATE TABLE public.equipment_poll_statistics (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,equipment_id        	INT         	NOT NULL
	,end_date            	TIMESTAMPTZ 	NOT NULL
	,poll_result         	INT         	NOT NULL
	,poll_type           	INT         	NOT NULL
	,comm_link_type      	INT         	NOT NULL
	,poll_error_count    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.gas_consumption_current;
CREATE TABLE public.gas_consumption_current (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,calculated_values   	INT
	,bad_values          	INT
	,t_outdoor           	REAL
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gas_consumption_day;
CREATE TABLE public.gas_consumption_day (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,normal_operation_duration	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,t_outdoor           	REAL
	,interpolated_values 	INT
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gas_consumption_hour;
CREATE TABLE public.gas_consumption_hour (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,normal_operation_duration	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,t_outdoor           	REAL
	,interpolated_values 	INT
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gas_consumption_month;
CREATE TABLE public.gas_consumption_month (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,normal_operation_duration	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,t_outdoor           	REAL
	,interpolated_values 	INT
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gas_totals;
CREATE TABLE public.gas_totals (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,v                   	REAL
	,v_std               	REAL
	,normal_operation_duration	REAL
	,flags               	INT         	NOT NULL
	,calculated_values   	INT
	,bad_values          	INT
	,resetted_values     	INT
	,interpolated_values 	INT
	,m                   	REAL
);

DROP TABLE IF EXISTS public.general_device_config_param;
CREATE TABLE public.general_device_config_param (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.gprs_controller_session;
CREATE TABLE public.gprs_controller_session (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,start_date_time     	TIMESTAMPTZ 	NOT NULL
	,end_date_time       	TIMESTAMPTZ
	,controller_clock    	TIMESTAMPTZ
	,signal_level        	INT
	,hardware_version    	TEXT
	,firmware_version    	TEXT
	,remote_ipaddress    	TEXT        	NOT NULL
	,remote_port         	INT         	NOT NULL
	,balance             	REAL
	,bytes_sent          	BIGINT      	NOT NULL
	,bytes_received      	BIGINT      	NOT NULL
	,iccid               	TEXT
	,active_sim          	INT
	,sim_pin_enabled     	BOOLEAN
	,equipment_id        	INT         	NOT NULL
	,end_reason          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.heat_loss;
CREATE TABLE public.heat_loss (
	 measure_point_id    	INT         	NOT NULL
	,year                	INT         	NOT NULL
	,jan                 	REAL
	,feb                 	REAL
	,mar                 	REAL
	,apr                 	REAL
	,may                 	REAL
	,jun                 	REAL
	,jul                 	REAL
	,aug                 	REAL
	,sep                 	REAL
	,oct                 	REAL
	,nov                 	REAL
	,dec                 	REAL
	,percent             	REAL
	,hour                	REAL
);

DROP TABLE IF EXISTS public.incident_type;
CREATE TABLE public.incident_type (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.inspector;
CREATE TABLE public.inspector (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,name                	TEXT        	NOT NULL
	,post                	TEXT        	NOT NULL
	,phone               	TEXT        	NOT NULL
	,email               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,supplier_id         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.ipaddress;
CREATE TABLE public.ipaddress (
	 account_id          	INT         	NOT NULL
	,range_start_ip      	BIGINT      	NOT NULL
	,range_end_ip        	BIGINT      	NOT NULL
);

DROP TABLE IF EXISTS public.limit_temps;
CREATE TABLE public.limit_temps (
	 temp_in             	INT
	,t0                  	INT
	,t2                  	INT
	,t4                  	INT
	,t6                  	INT
	,t8                  	INT
	,t10                 	INT
	,t12                 	INT
	,t14                 	INT
	,t16                 	INT
	,t18                 	INT
	,t20                 	INT
	,t22                 	INT
	,t24                 	INT
	,t26                 	INT
	,t28                 	INT
	,t30                 	INT
	,t32                 	INT
);

DROP TABLE IF EXISTS public.mail_list;
CREATE TABLE public.mail_list (
	 task_id             	INT         	NOT NULL
	,send_sms            	BOOLEAN     	NOT NULL
	,send_email          	BOOLEAN     	NOT NULL
	,account_id          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.map;
CREATE TABLE public.map (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,is_public           	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.map_image;
CREATE TABLE public.map_image (
	 checksum            	INT         	NOT NULL
	,image               	BYTEA       	NOT NULL
);

DROP TABLE IF EXISTS public.map_object;
CREATE TABLE public.map_object (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,map_id              	INT         	NOT NULL
	,map_object_type_id  	INT         	NOT NULL
	,measure_point_id    	INT
	,x                   	INT         	NOT NULL
	,y                   	INT         	NOT NULL
	,d_x                 	INT         	NOT NULL
	,d_y                 	INT         	NOT NULL
	,text                	TEXT        	NOT NULL
	,tag                 	TEXT        	NOT NULL
	,image               	INT
	,parameter           	TEXT
	,locked              	BOOLEAN     	NOT NULL
	,zorder              	INT         	NOT NULL
	,node_signaling_id   	INT
);

DROP TABLE IF EXISTS public.map_object_appearance;
CREATE TABLE public.map_object_appearance (
	 map_object_id       	INT         	NOT NULL
	,appearance_type     	INT         	NOT NULL
	,border_color        	INT         	NOT NULL
	,border_width        	INT         	NOT NULL
	,fill_color          	INT         	NOT NULL
	,font_color          	INT         	NOT NULL
	,font_size           	REAL        	NOT NULL
	,font_family         	TEXT        	NOT NULL
	,font_style          	INT         	NOT NULL
	,text_valignment     	INT         	NOT NULL
	,text_halignment     	INT         	NOT NULL
	,visible             	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.map_object_type;
CREATE TABLE public.map_object_type (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.measured_parameter;
CREATE TABLE public.measured_parameter (
	 measured_parameter_id	INT         	NOT NULL
	,measured_parameter_title	TEXT        	NOT NULL
	,measured_parameter_system_unit_id	INT
	,measured_parameter_code	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point;
CREATE TABLE public.measure_point (
	 measure_point_id    	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,measure_point_title 	TEXT        	NOT NULL
	,measure_point_service_number	INT         	NOT NULL
	,measure_point_comment	TEXT        	NOT NULL
	,measure_point_type  	INT         	NOT NULL
	,measure_point_state 	INT         	NOT NULL  DEFAULT 0
	,measure_point_selected_params_list	TEXT        	NOT NULL
	,measure_point_node_id	INT
	,measure_point_system_type_id	INT         	NOT NULL
	,auto_poll_start_date	TIMESTAMPTZ
	,is_double_pipe_system	BOOLEAN     	NOT NULL
	,personal_account_id 	INT
	,contract_heat       	REAL        	NOT NULL
	,contract_flow       	REAL        	NOT NULL
	,current_ratio       	REAL        	NOT NULL
	,voltage_ratio       	REAL        	NOT NULL
	,contract_pin        	REAL        	NOT NULL
	,contract_pout       	REAL        	NOT NULL
	,contract_tin        	REAL        	NOT NULL
	,contract_tout       	REAL        	NOT NULL
	,show_calculated_data	BOOLEAN     	NOT NULL
	,device_pressure_type	INT         	NOT NULL
	,counter_id          	INT
	,calculate_missing_totals	BOOLEAN     	NOT NULL
	,calculate_missing_totals_estimate	BOOLEAN     	NOT NULL
	,calculate_missing_hour_consumption	INT         	NOT NULL
	,calculate_missing_day_consumption	INT         	NOT NULL
	,calculate_missing_month_consumption	INT         	NOT NULL
	,calculate_missing_values	BOOLEAN     	NOT NULL
	,reporting_hour      	INT         	NOT NULL
	,reporting_day       	INT         	NOT NULL
	,show_bad_values     	BOOLEAN     	NOT NULL
	,calculate_missing_heat_values	BOOLEAN     	NOT NULL
	,calculated_values_averaging_mode	INT         	NOT NULL
	,is_reversible_flow  	BOOLEAN     	NOT NULL
	,reporting_hour_mode 	INT         	NOT NULL
	,is_virtual          	BOOLEAN     	NOT NULL
	,use_advanced_totals_interpolation	BOOLEAN     	NOT NULL
	,diag_data_types     	INT
	,display_pressure_type	INT         	NOT NULL
	,admission_date      	TIMESTAMPTZ
);

DROP TABLE IF EXISTS public.measure_point_custom_attribute;
CREATE TABLE public.measure_point_custom_attribute (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,custom_attribute_id 	INT         	NOT NULL
	,measure_point_id    	INT         	NOT NULL
	,value               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_data_copy_settings;
CREATE TABLE public.measure_point_data_copy_settings (
	 target_measure_point_id	INT         	NOT NULL
	,water_parameter     	INT         	NOT NULL
	,source_measure_point_id	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_device_error_day;
CREATE TABLE public.measure_point_device_error_day (
	 measure_point_id    	INT         	NOT NULL
	,archive_type        	INT         	NOT NULL
	,channel_number      	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,event_code          	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,duration            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_device_error_hour;
CREATE TABLE public.measure_point_device_error_hour (
	 measure_point_id    	INT         	NOT NULL
	,archive_type        	INT         	NOT NULL
	,channel_number      	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,event_code          	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,duration            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_device_error_month;
CREATE TABLE public.measure_point_device_error_month (
	 measure_point_id    	INT         	NOT NULL
	,archive_type        	INT         	NOT NULL
	,channel_number      	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,event_code          	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,duration            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_diag_defaults;
CREATE TABLE public.measure_point_diag_defaults (
	 system_type_id      	INT         	NOT NULL
	,incident_type_id    	INT         	NOT NULL
	,is_enabled          	BOOLEAN     	NOT NULL
	,value_1             	REAL        	NOT NULL
	,value_2             	REAL        	NOT NULL
	,is_summer_mode      	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_diag_params;
CREATE TABLE public.measure_point_diag_params (
	 measure_point_id    	INT         	NOT NULL
	,incident_type_id    	INT         	NOT NULL
	,is_enabled          	BOOLEAN     	NOT NULL
	,value_1             	REAL        	NOT NULL
	,value_2             	REAL        	NOT NULL
	,is_summer_mode      	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_expression;
CREATE TABLE public.measure_point_expression (
	 measure_point_id    	INT         	NOT NULL
	,data_parameter      	INT         	NOT NULL
	,expression          	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_order;
CREATE TABLE public.measure_point_order (
	 measure_point_id    	INT         	NOT NULL
	,order_number        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_report;
CREATE TABLE public.measure_point_report (
	 measure_point_id    	INT         	NOT NULL
	,report_id           	INT         	NOT NULL
	,report_template_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measure_point_sensor;
CREATE TABLE public.measure_point_sensor (
	 measure_point_id    	INT         	NOT NULL
	,is_supply_channel   	BOOLEAN     	NOT NULL
	,measured_parameter_id	INT         	NOT NULL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.message_log;
CREATE TABLE public.message_log (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,date                	TIMESTAMPTZ 	NOT NULL
	,sender_account_id   	INT
	,sender_name         	TEXT        	NOT NULL
	,recipient_name      	TEXT        	NOT NULL
	,recipient_address   	TEXT        	NOT NULL
	,message             	VARCHAR     	NOT NULL
	,message_type        	INT         	NOT NULL
	,send_result         	TEXT        	NOT NULL
	,send_state          	INT         	NOT NULL
	,send_schedule_date  	TIMESTAMPTZ 	NOT NULL
);

DROP TABLE IF EXISTS public.modem_command;
CREATE TABLE public.modem_command (
	 modem_command_modem_type_id	INT         	NOT NULL
	,modem_command_modem_command_type_id	INT         	NOT NULL
	,modem_command_text  	TEXT        	NOT NULL
	,modem_command_termination_type	INT         	NOT NULL  DEFAULT 2
	,modem_command_delay_before	INT         	NOT NULL
	,modem_command_timeout	INT         	NOT NULL
	,modem_command_bad_answer_list	TEXT        	NOT NULL
	,modem_command_good_answer_list	TEXT        	NOT NULL
	,modem_command_comment	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.modem_command_type;
CREATE TABLE public.modem_command_type (
	 modem_command_type_id	INT         	NOT NULL
	,modem_command_type_title	TEXT        	NOT NULL
	,modem_command_type_code	TEXT        	NOT NULL
	,modem_command_type_comment	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.modem_type;
CREATE TABLE public.modem_type (
	 modem_type_id       	INT         	NOT NULL
	,modem_type_title    	TEXT        	NOT NULL
	,modem_type_communication_link_type	INT         	NOT NULL
	,modem_type_data_transfer_delay	INT         	NOT NULL
	,modem_type_port_settings	TEXT        	NOT NULL
	,modem_type_max_command_len	INT         	NOT NULL
	,modem_type_shield_code	INT
);

DROP TABLE IF EXISTS public.nested_balance_groups;
CREATE TABLE public.nested_balance_groups (
	 parent_id           	INT         	NOT NULL
	,child_id            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node;
CREATE TABLE public.node (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,address             	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,number              	INT         	NOT NULL
	,customer_id         	INT
	,responsible_name    	TEXT        	NOT NULL
	,responsible_phone   	TEXT        	NOT NULL
	,service_company_id  	INT
	,state               	INT         	NOT NULL
	,serviceman_id       	INT
	,type                	INT         	NOT NULL
	,norm_cold_water     	REAL        	NOT NULL
	,norm_hot_water      	REAL        	NOT NULL
	,norm_heat           	REAL        	NOT NULL
	,norm_electricity    	REAL        	NOT NULL
	,norm_gas            	REAL        	NOT NULL
	,is_communal_poll_enabled	BOOLEAN     	NOT NULL
	,time_zone_offset    	INT         	NOT NULL
	,cold_water_temp     	REAL        	NOT NULL
	,license_count       	INT         	NOT NULL
	,contract_min_temp   	INT         	NOT NULL  DEFAULT 70
	,contract_max_temp   	INT         	NOT NULL  DEFAULT 130
	,contract_low_break_temp	INT         	NOT NULL  DEFAULT 0
	,contract_high_break_temp	INT         	NOT NULL  DEFAULT 0
	,min_outdoor_temp    	INT         	NOT NULL  -- DEFAULT ((-31))
	,temperature_compliance_analysis_type	INT         	NOT NULL  DEFAULT 0
	,territory_id        	INT         	NOT NULL  DEFAULT 0
	,division_id         	INT
);

DROP TABLE IF EXISTS public.node_balance;
CREATE TABLE public.node_balance (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,node_id             	INT         	NOT NULL
	,symbol              	TEXT        	NOT NULL
	,expression          	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.node_custom_attribute;
CREATE TABLE public.node_custom_attribute (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,node_id             	INT         	NOT NULL
	,custom_attribute_id 	INT         	NOT NULL
	,value               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.node_diag_defaults;
CREATE TABLE public.node_diag_defaults (
	 incident_type_id    	INT         	NOT NULL
	,is_enabled          	BOOLEAN     	NOT NULL
	,value_1             	REAL        	NOT NULL
	,value_2             	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.node_diag_params;
CREATE TABLE public.node_diag_params (
	 node_id             	INT         	NOT NULL
	,incident_type_id    	INT         	NOT NULL
	,is_enabled          	BOOLEAN     	NOT NULL
	,value_1             	REAL        	NOT NULL
	,value_2             	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.node_equipment;
CREATE TABLE public.node_equipment (
	 node_id             	INT         	NOT NULL
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node_file;
CREATE TABLE public.node_file (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,node_id             	INT         	NOT NULL
	,file_name           	TEXT        	NOT NULL
	,creation_time       	TIMESTAMPTZ 	NOT NULL
	,last_write_time     	TIMESTAMPTZ 	NOT NULL
	,content             	BYTEA       	NOT NULL
	,hash                	BYTEA       	NOT NULL
	,public_file         	BOOLEAN     	NOT NULL  DEFAULT true
	,thumbnail           	BYTEA
	,length              	BIGINT        -- COMPUTED (datalength([Content]))
);

DROP TABLE IF EXISTS public.node_geo_location;
CREATE TABLE public.node_geo_location (
	 node_id             	INT         	NOT NULL
	,latitude            	REAL        	NOT NULL
	,longitude           	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.node_group;
CREATE TABLE public.node_group (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,division_id         	INT
);

DROP TABLE IF EXISTS public.node_group_membership;
CREATE TABLE public.node_group_membership (
	 node_group_id       	INT         	NOT NULL
	,node_id             	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node_job;
CREATE TABLE public.node_job (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,node_id             	INT         	NOT NULL
	,measure_point_id    	INT
	,creator_account_id  	INT
	,creator_name        	TEXT        	NOT NULL  DEFAULT ''
	,performer_account_id	INT
	,performer_name      	TEXT        	NOT NULL  DEFAULT ''
	,start_date          	DATE        	NOT NULL
	,scheduled_end_date  	DATE        	NOT NULL
	,fact_end_date       	DATE
	,title               	TEXT        	NOT NULL
	,description         	TEXT        	NOT NULL  DEFAULT ''
	,state               	INT         	NOT NULL
	,type                	INT         	NOT NULL
	,resolution_id       	INT
	,incident_id         	INT
	,work_order_number   	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.node_job_comment;
CREATE TABLE public.node_job_comment (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,node_job_id         	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,account_id          	INT
	,account_name        	TEXT        	NOT NULL
	,text                	VARCHAR
);

DROP TABLE IF EXISTS public.node_job_file;
CREATE TABLE public.node_job_file (
	 node_job_id         	INT         	NOT NULL
	,node_file_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node_job_resolution;
CREATE TABLE public.node_job_resolution (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.node_poll_connection;
CREATE TABLE public.node_poll_connection (
	 poll_connection_id  	INT         	NOT NULL
	,node_id             	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node_report;
CREATE TABLE public.node_report (
	 node_id             	INT         	NOT NULL
	,report_id           	INT         	NOT NULL
	,report_template_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node_season_history;
CREATE TABLE public.node_season_history (
	 node_id             	INT         	NOT NULL
	,start_date          	DATE        	NOT NULL
	,is_heating_season   	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.node_signaling;
CREATE TABLE public.node_signaling (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,node_id             	INT         	NOT NULL
	,signal_title        	TEXT        	NOT NULL
	,dry_contact_number  	INT         	NOT NULL
	,incident_importance_set	INT         	NOT NULL
	,incident_message_set	TEXT        	NOT NULL
	,incident_importance_unset	INT         	NOT NULL
	,incident_message_unset	TEXT        	NOT NULL
	,current_state       	INT         	NOT NULL  DEFAULT 0
	,equipment_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node_supplier;
CREATE TABLE public.node_supplier (
	 node_id             	INT         	NOT NULL
	,system_type         	INT         	NOT NULL
	,supplier_id         	INT
	,contract_number     	TEXT        	NOT NULL
	,contract_date       	TIMESTAMPTZ
	,inspector_id        	INT
);

DROP TABLE IF EXISTS public.node_user_diag_params;
CREATE TABLE public.node_user_diag_params (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,node_id             	INT         	NOT NULL
	,expression          	VARCHAR     	NOT NULL
	,seasons             	INT         	NOT NULL
	,data_types          	INT         	NOT NULL
	,message             	TEXT        	NOT NULL
	,enabled             	BOOLEAN     	NOT NULL
	,importance          	INT         	NOT NULL
	,short_message       	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.notification;
CREATE TABLE public.notification (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,notification_type_id	INT         	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,message             	TEXT        	NOT NULL
	,importance          	INT         	NOT NULL
	,expired_date        	DATE
	,equipment_id        	INT
	,incident_id         	INT
	,node_job_id         	INT
	,url                 	TEXT
	,measure_point_id    	INT
);

DROP TABLE IF EXISTS public.notification_type;
CREATE TABLE public.notification_type (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.outdoor_temperature;
CREATE TABLE public.outdoor_temperature (
	 date                	TIMESTAMPTZ 	NOT NULL
	,value               	REAL        	NOT NULL
	,territory_id        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.personal_account;
CREATE TABLE public.personal_account (
	 personal_account_id 	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,personal_account_number	TEXT        	NOT NULL
	,personal_account_number_apartment	TEXT        	NOT NULL
	,personal_account_number_resident	INT         	NOT NULL
	,personal_account_area_apartment	REAL        	NOT NULL
	,node_id             	INT         	NOT NULL
	,type                	INT         	NOT NULL
	,contract_hot_water  	REAL        	NOT NULL
	,contract_cold_water 	REAL        	NOT NULL
	,contract_gas        	REAL        	NOT NULL
	,contract_electricity	REAL        	NOT NULL
	,contract_heat       	REAL        	NOT NULL
	,contract_consumption_type	INT         	NOT NULL
	,floor_number        	INT         	NOT NULL
	,room_count          	INT         	NOT NULL
	,entrance_number     	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.plugin;
CREATE TABLE public.plugin (
	 identifier          	CHAR(36)    	NOT NULL
	,file_name           	TEXT        	NOT NULL
	,is_disabled         	BOOLEAN     	NOT NULL
	,settings            	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.poll_connection;
CREATE TABLE public.poll_connection (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,comm_link_type      	INT         	NOT NULL
	,poll_port_id        	INT
	,poll_port_group_id  	INT
	,comm_device_equipment_id	INT
	,comm_device_port_id 	INT
	,comm_device_port_settings_id	INT
	,connection_timeout  	INT
	,dial_number         	TEXT
	,comm_link_protocol  	INT         	NOT NULL
	,gprs_call_type      	INT         	NOT NULL
	,gprs_auto_disconnect	BOOLEAN     	NOT NULL
	,internet_host       	TEXT        	NOT NULL
	,internet_port       	INT         	NOT NULL
	,imitate_modem       	BOOLEAN     	NOT NULL
	,port_speed          	INT         	NOT NULL
	,flow_control        	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.poll_port;
CREATE TABLE public.poll_port (
	 poll_port_id        	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,poll_port_port_number	INT         	NOT NULL
	,poll_port_enabled   	BOOLEAN     	NOT NULL
	,poll_port_title     	TEXT        	NOT NULL
	,poll_port_dial_prefix	TEXT        	NOT NULL
	,poll_port_communication_link_type	INT         	NOT NULL
	,poll_port_modem_type_id	INT         	NOT NULL
	,gprs_listen_ipaddress	TEXT        	NOT NULL
	,gprs_listen_port    	INT         	NOT NULL
	,max_connections_count	INT         	NOT NULL
	,software_carrier_control	BOOLEAN     	NOT NULL
	,comment             	TEXT        	NOT NULL
	,poll_port_group_id  	INT
	,billing_model       	INT         	NOT NULL
	,tariff_plan_included_minutes	INT         	NOT NULL
	,poll_service_id     	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.poll_port_group;
CREATE TABLE public.poll_port_group (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.poll_port_statistics;
CREATE TABLE public.poll_port_statistics (
	 poll_port_id        	INT         	NOT NULL
	,date                	DATE        	NOT NULL
	,call_count          	INT         	NOT NULL
	,total_calls_duration	INT         	NOT NULL
	,traffic             	BIGINT      	NOT NULL
);

DROP TABLE IF EXISTS public.poll_service;
CREATE TABLE public.poll_service (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,ip_address          	TEXT        	NOT NULL
	,debug_enabled       	BOOLEAN     	NOT NULL
	,token               	TEXT
);

DROP TABLE IF EXISTS public.poll_session;
CREATE TABLE public.poll_session (
	 poll_session_id     	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,poll_session_client_session_id	INT         	NOT NULL
	,poll_session_task_id	INT
	,poll_session_start_datetime	TIMESTAMPTZ 	NOT NULL
	,poll_session_end_datetime	TIMESTAMPTZ
	,poll_session_result_code	INT
	,poll_session_communication_link_type	INT         	NOT NULL
	,dial_time           	REAL        	NOT NULL
	,poll_port_id        	INT
	,node_id             	INT
	,phone_number        	TEXT        	NOT NULL
	,poll_task_type      	INT         	NOT NULL
	,call_duration       	INT         	NOT NULL
	,bytes_sent          	BIGINT      	NOT NULL
	,bytes_received      	BIGINT      	NOT NULL
	,comm_equipment_id   	INT
	,poll_connection_id  	INT
);

DROP TABLE IF EXISTS public.poll_session_log;
CREATE TABLE public.poll_session_log (
	 poll_session_log_poll_session_id	INT         	NOT NULL
	,poll_session_log_data_date	TIMESTAMPTZ 	NOT NULL
	,poll_session_log_type	INT         	NOT NULL
	,poll_session_log_message	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.poll_task;
CREATE TABLE public.poll_task (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,description         	TEXT        	NOT NULL  DEFAULT ''
	,start_datetime      	TIMESTAMPTZ 	NOT NULL
	,end_datetime        	TIMESTAMPTZ 	NOT NULL
	,execution_state     	INT         	NOT NULL  DEFAULT 1
	,max_attempts        	INT         	NOT NULL  DEFAULT 1
	,attempt             	INT         	NOT NULL  DEFAULT 0
	,last_attempt_time   	TIMESTAMPTZ
	,last_attempt_result_code	INT
	,next_attempt_delay  	INT         	NOT NULL  DEFAULT 3600
	,freq_type           	INT         	NOT NULL  DEFAULT 4
	,freq_interval       	INT         	NOT NULL  DEFAULT 1
	,start_time          	INT         	NOT NULL  DEFAULT 0
	,retry_interval      	INT         	NOT NULL  DEFAULT 0
	,end_time            	INT         	NOT NULL  DEFAULT 1439
	,poll_interval_start_date	TIMESTAMPTZ
	,poll_interval_end_date	TIMESTAMPTZ
	,poll_instant_interval	INT         	NOT NULL  DEFAULT 10
	,remote_console_mode 	BOOLEAN     	NOT NULL  DEFAULT false
	,last_attempt_end_time	TIMESTAMPTZ
	,priority            	INT         	NOT NULL  DEFAULT 3
	,type                	INT         	NOT NULL
	,load_absent_data_only	BOOLEAN     	NOT NULL
	,poll_connection_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.poll_task_measure_point;
CREATE TABLE public.poll_task_measure_point (
	 task_id             	INT         	NOT NULL
	,measure_point_id    	INT         	NOT NULL
	,perform_time_correction	BOOLEAN     	NOT NULL
	,requested_data_mask 	INT         	NOT NULL
	,backup_connection_id	INT
	,backup_last_poll_date	TIMESTAMPTZ
	,backup_start_time   	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.prepared_report;
CREATE TABLE public.prepared_report (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,generation_date_time	TIMESTAMPTZ 	NOT NULL
	,report_title        	TEXT        	NOT NULL
	,template_title      	TEXT        	NOT NULL
	,report_type         	INT         	NOT NULL
	,report_entity       	INT         	NOT NULL
	,node_id             	INT
	,measure_point_id    	INT
	,data_type           	INT         	NOT NULL
	,start_date          	TIMESTAMPTZ 	NOT NULL
	,end_date            	TIMESTAMPTZ 	NOT NULL
	,data                	BYTEA       	NOT NULL
	,thumbnail           	BYTEA       	NOT NULL
	,file_name           	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.protocol_type;
CREATE TABLE public.protocol_type (
	 id                  	INT         	NOT NULL
	,number              	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,equipment_model_id  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.report;
CREATE TABLE public.report (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,is_system           	BOOLEAN     	NOT NULL
	,data_type           	INT         	NOT NULL
	,report_type         	INT         	NOT NULL
	,period_start_day    	INT         	NOT NULL
	,period_start_month  	INT         	NOT NULL
	,period_end_day      	INT         	NOT NULL
	,period_end_month    	INT         	NOT NULL
	,period_type         	INT         	NOT NULL
	,report_entity       	INT         	NOT NULL
	,report_template_id  	INT
	,file_name_format    	TEXT        	NOT NULL  DEFAULT ''
	,use_report_parameter	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.report_fixed_node;
CREATE TABLE public.report_fixed_node (
	 report_template_id  	INT         	NOT NULL
	,node_id             	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.report_generating_task_node;
CREATE TABLE public.report_generating_task_node (
	 task_id             	INT         	NOT NULL
	,node_id             	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.report_generating_task_settings;
CREATE TABLE public.report_generating_task_settings (
	 task_id             	INT         	NOT NULL
	,measure_point_systems	INT         	NOT NULL
	,report_id           	INT         	NOT NULL
	,mailing_file_format 	INT         	NOT NULL
	,mailing_file_split_mode	INT         	NOT NULL
	,mail_subject        	TEXT        	NOT NULL
	,save_report         	BOOLEAN     	NOT NULL
	,mailing_enabled     	BOOLEAN     	NOT NULL
	,mail_message        	TEXT        	NOT NULL  DEFAULT ''
	,pdf_export_properties	VARCHAR     	NOT NULL  DEFAULT ''
	,report_save_directory	TEXT        	NOT NULL  DEFAULT ''
	,pack_attachments    	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.report_parameter;
CREATE TABLE public.report_parameter (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,report_id           	INT         	NOT NULL
	,report_parameter_property_id	INT         	NOT NULL
	,value               	TEXT        	NOT NULL  DEFAULT ''
);

DROP TABLE IF EXISTS public.report_parameter_property;
CREATE TABLE public.report_parameter_property (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,parameter_name      	TEXT        	NOT NULL
	,value_type          	INT         	NOT NULL
	,comment             	TEXT        	NOT NULL
	,report_type         	INT         	NOT NULL
	,report_entity       	INT         	NOT NULL
	,is_system           	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.report_template;
CREATE TABLE public.report_template (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,is_user             	BOOLEAN     	NOT NULL
	,data_source_mask    	BIGINT      	NOT NULL
	,text                	VARCHAR
	,report_entity       	INT         	NOT NULL
	,report_type         	INT         	NOT NULL
	,measure_point_count_heat	INT         	NOT NULL  DEFAULT 0
	,measure_point_count_hot_water	INT         	NOT NULL  DEFAULT 0
	,measure_point_count_cold_water	INT         	NOT NULL  DEFAULT 0
	,measure_point_count_steam	INT         	NOT NULL  DEFAULT 0
	,measure_point_count_gas	INT         	NOT NULL  DEFAULT 0
	,measure_point_count_electricity	INT         	NOT NULL  DEFAULT 0
	,build_number        	INT         	NOT NULL  DEFAULT 0
	,estimation_algorithm	INT         	NOT NULL  DEFAULT 0
	,daily_average_calculating_period	INT         	NOT NULL  DEFAULT 0
	,device_model        	INT         	NOT NULL  DEFAULT 0
	,measure_point_count_sewage	INT         	NOT NULL  DEFAULT 0
);

DROP TABLE IF EXISTS public.room_contract_consumption;
CREATE TABLE public.room_contract_consumption (
	 room_id             	INT         	NOT NULL
	,month_number        	INT         	NOT NULL
	,heat_value          	REAL
	,hot_water_value     	REAL
	,cold_water_value    	REAL
	,electricity_value   	REAL
);

DROP TABLE IF EXISTS public.room_counter;
CREATE TABLE public.room_counter (
	 equipment_id        	INT         	NOT NULL
	,room_id             	INT         	NOT NULL
	,initial_totals_value_1	REAL        	NOT NULL
	,initial_totals_value_2	REAL        	NOT NULL
	,initial_totals_date 	TIMESTAMPTZ 	NOT NULL
	,install_location    	TEXT        	NOT NULL
	,measure_point_id    	INT
);

DROP TABLE IF EXISTS public.scm_measure_points;
CREATE TABLE public.scm_measure_points (
	 measure_point_id    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.service_company;
CREATE TABLE public.service_company (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,phone               	TEXT        	NOT NULL
	,license_number      	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.serviceman;
CREATE TABLE public.serviceman (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,name                	TEXT        	NOT NULL
	,service_company_id  	INT
	,phone               	TEXT        	NOT NULL  DEFAULT ''
	,email               	TEXT        	NOT NULL  DEFAULT ''
	,comment             	TEXT        	NOT NULL  DEFAULT ''
);

DROP TABLE IF EXISTS public.supplier;
CREATE TABLE public.supplier (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,system_type_mask    	INT         	NOT NULL
	,contacts            	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.system_log;
CREATE TABLE public.system_log (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,date_time           	TIMESTAMPTZ 	NOT NULL
	,importance          	INT         	NOT NULL
	,message             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.system_parameters;
CREATE TABLE public.system_parameters (
	 log_debug_messages  	BOOLEAN     	NOT NULL
	,poll_log_storage_time	INT         	NOT NULL
	,system_log_storage_time	INT         	NOT NULL
	,user_session_log_storage_time	INT         	NOT NULL
	,account_log_storage_time	INT         	NOT NULL
	,email_log_storage_time	INT         	NOT NULL
	,is_auto_poll_enabled	BOOLEAN     	NOT NULL
	,poll_log_level      	INT         	NOT NULL
	,poll_max_duration   	INT         	NOT NULL
	,poll_max_time_diff  	INT         	NOT NULL
	,device_request_retry_count	INT         	NOT NULL
	,poll_port_block_error_count	INT         	NOT NULL
	,poll_port_block_timeout	INT         	NOT NULL
	,time_correction_enabled	BOOLEAN     	NOT NULL
	,time_correction_threshold	INT         	NOT NULL
	,gsm_modem_enabled   	BOOLEAN     	NOT NULL
	,gsm_modem_com_port_number	INT         	NOT NULL
	,gsm_modem_baud_rate 	INT         	NOT NULL
	,gsm_modem_flow_control	INT         	NOT NULL
	,default_supply_pressure	INT         	NOT NULL
	,default_return_pressure	INT         	NOT NULL
	,default_cold_water_temp	REAL        	NOT NULL
	,pressure_display_type	INT         	NOT NULL
	,storage_time_current_data	INT         	NOT NULL
	,max_part_count_in_multipart_sms	INT         	NOT NULL
	,smtp_server         	TEXT        	NOT NULL
	,smtp_port           	INT         	NOT NULL
	,smtp_sender_address 	TEXT        	NOT NULL
	,smtp_sender_display_name	TEXT        	NOT NULL
	,smtp_login          	TEXT        	NOT NULL
	,smtp_password       	TEXT        	NOT NULL
	,is_communal_enabled 	BOOLEAN     	NOT NULL
	,diag_enabled        	BOOLEAN     	NOT NULL
	,diag_day_data_enabled	BOOLEAN     	NOT NULL
	,diag_hour_data_enabled	BOOLEAN     	NOT NULL
	,diag_current_data_enabled	BOOLEAN     	NOT NULL
	,storage_time_month_data	INT         	NOT NULL
	,storage_time_day_data	INT         	NOT NULL
	,storage_time_hour_data	INT         	NOT NULL
	,storage_time_device_config	INT         	NOT NULL
	,storage_time_device_event	INT         	NOT NULL
	,storage_time_power_data	INT         	NOT NULL
	,web_site_address    	TEXT        	NOT NULL
	,smtp_enable_ssl     	BOOLEAN     	NOT NULL
	,ignore_not_all_data_read_error	BOOLEAN     	NOT NULL
	,backup_directory    	TEXT        	NOT NULL  DEFAULT ''
	,updater_data_base_backup_mode	INT         	NOT NULL
	,storage_time_totals_data	INT         	NOT NULL
	,backup_count        	INT         	NOT NULL
	,calibration_notify_day_count	INT         	NOT NULL
	,job_due_date_notify_day_count	INT         	NOT NULL
	,allow_sms_notifications	BOOLEAN     	NOT NULL
	,gsm_modem_model_id  	INT         	NOT NULL
	,storage_time_prepared_reports	INT         	NOT NULL
	,id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,storage_time_incidents	INT         	NOT NULL
	,storage_time_gprs_sessions	INT         	NOT NULL
	,allowed_node_file_extensions	TEXT
	,minimum_password_length	INT         	NOT NULL
	,password_must_contain_numbers	BOOLEAN     	NOT NULL
	,password_must_contain_uppercase_letters	BOOLEAN     	NOT NULL
	,password_must_contain_lowercase_letters	BOOLEAN     	NOT NULL
	,password_must_contain_special_chars	BOOLEAN     	NOT NULL
	,gsm_modem_use_sip_for_voice_calls	BOOLEAN     	NOT NULL
	,gsm_modem_sip_server_address	VARCHAR     	NOT NULL
	,gsm_modem_sip_login 	TEXT        	NOT NULL
	,gsm_modem_sip_password	TEXT        	NOT NULL
	,gsm_modem_sip_from_domain	VARCHAR     	NOT NULL
	,save_generated_report_to_data_base	BOOLEAN     	NOT NULL
	,log_system_log_gprs_ident_error	BOOLEAN     	NOT NULL
	,log_system_log_gprs_modem_not_found	BOOLEAN     	NOT NULL
	,log_system_log_time_corrected	BOOLEAN     	NOT NULL
	,log_system_log_report_printed	BOOLEAN     	NOT NULL
	,log_system_log_ratio_doesnt_match	BOOLEAN     	NOT NULL
	,log_system_log_poll_error	BOOLEAN     	NOT NULL
	,log_system_log_message_sent	BOOLEAN     	NOT NULL
	,log_system_log_user_session_started	BOOLEAN     	NOT NULL
	,log_system_log_authentication_error	BOOLEAN     	NOT NULL
	,log_system_log_incident_closed	BOOLEAN     	NOT NULL
	,notification_admission_date_notify_day_count	INT         	NOT NULL
	,storage_time_node_equipment_history	INT         	NOT NULL
	,poll_disable_port_error_count	INT         	NOT NULL
	,poll_reboot_port_error_count	INT         	NOT NULL
	,storage_time_notifications	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.system_type;
CREATE TABLE public.system_type (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.task;
CREATE TABLE public.task (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,freq_type           	INT         	NOT NULL  DEFAULT 4
	,freq_interval       	INT         	NOT NULL  DEFAULT 1
	,start_time          	INT         	NOT NULL  DEFAULT 0
	,retry_interval      	INT         	NOT NULL  DEFAULT 0
	,end_time            	INT         	NOT NULL  DEFAULT 1439
	,title               	TEXT        	NOT NULL
	,enabled             	BOOLEAN     	NOT NULL  DEFAULT true
	,last_run_time       	TIMESTAMPTZ
	,last_result         	BOOLEAN
	,last_result_error_message	TEXT        	NOT NULL  DEFAULT ''
	,start_date_time     	TIMESTAMPTZ 	NOT NULL  DEFAULT current_timestamp
	,type                	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.territory;
CREATE TABLE public.territory (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,parent_id           	INT
	,name                	TEXT        	NOT NULL
	,time_zone_offset    	INT         	NOT NULL
	,outdoor_temp_source_measure_point_id	INT
);

DROP TABLE IF EXISTS public.time_zone;
CREATE TABLE public.time_zone (
	 offset              	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.unit;
CREATE TABLE public.unit (
	 unit_id             	INT         	NOT NULL
	,unit_title          	TEXT        	NOT NULL
	,unit_comment        	TEXT        	NOT NULL
	,unit_measured_parameter_id	INT         	NOT NULL
	,unit_code           	TEXT        	NOT NULL
	,unit_base_unit_id   	INT         	NOT NULL
	,unit_multiplier     	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.user_session_log;
CREATE TABLE public.user_session_log (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,account_id          	INT         	NOT NULL
	,account_login       	TEXT        	NOT NULL
	,account_display_name	TEXT        	NOT NULL
	,ipaddress           	TEXT        	NOT NULL
	,start_datetime      	TIMESTAMPTZ 	NOT NULL
	,end_datetime        	TIMESTAMPTZ
	,exit_code           	INT         	NOT NULL
	,application         	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.user_session_restore_token;
CREATE TABLE public.user_session_restore_token (
	 id                  	BIGINT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,account_id          	INT         	NOT NULL
	,expire_date         	TIMESTAMPTZ 	NOT NULL
	,restore_token       	TEXT        	NOT NULL
	,creation_date       	TIMESTAMPTZ 	NOT NULL
	,original_ip_address 	TEXT        	NOT NULL
	,last_activity_date  	TIMESTAMPTZ 	NOT NULL
	,application         	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.version;
CREATE TABLE public.version (
	 build               	INT         	NOT NULL
	,version             	TEXT        	NOT NULL
	,date                	TIMESTAMPTZ 	NOT NULL
	,license             	BYTEA       	NOT NULL
	,last_migration_build	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.water_consumption_current;
CREATE TABLE public.water_consumption_current (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,t_out               	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,m_in                	REAL
	,m_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,p_cw                	REAL
	,h_delta             	REAL
	,calculated_values   	INT
	,bad_values          	INT
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.water_consumption_day;
CREATE TABLE public.water_consumption_day (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,m_in                	REAL
	,t_out               	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,normal_operation_duration	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,h_delta             	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,interpolated_values 	INT
	,stop_duration       	REAL
	,flow_underrun_duration	REAL
	,flow_overrun_duration	REAL
	,temp_diff_low_duration	REAL
	,no_power_duration   	REAL
	,incident_duration   	REAL
	,saturated_steam_duration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.water_consumption_hour;
CREATE TABLE public.water_consumption_hour (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,m_in                	REAL
	,t_out               	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,normal_operation_duration	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,h_delta             	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,interpolated_values 	INT
	,stop_duration       	REAL
	,flow_underrun_duration	REAL
	,flow_overrun_duration	REAL
	,temp_diff_low_duration	REAL
	,no_power_duration   	REAL
	,incident_duration   	REAL
	,saturated_steam_duration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.water_consumption_month;
CREATE TABLE public.water_consumption_month (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,m_in                	REAL
	,t_out               	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,normal_operation_duration	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,h_delta             	REAL
	,attributes          	INT
	,calculated_values   	INT
	,bad_values          	INT
	,interpolated_values 	INT
	,stop_duration       	REAL
	,flow_underrun_duration	REAL
	,flow_overrun_duration	REAL
	,temp_diff_low_duration	REAL
	,no_power_duration   	REAL
	,incident_duration   	REAL
	,saturated_steam_duration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.water_estimated_consumption;
CREATE TABLE public.water_estimated_consumption (
	 measure_point_id    	INT         	NOT NULL
	,previous_month      	BOOLEAN     	NOT NULL
	,start_date          	TIMESTAMPTZ 	NOT NULL
	,estimation_algorithm	INT         	NOT NULL  DEFAULT 1
	,end_date            	TIMESTAMPTZ 	NOT NULL
	,m_in                	REAL
	,m_out               	REAL
	,m_delta             	REAL
	,v_in                	REAL
	,v_out               	REAL
	,v_delta             	REAL
	,h_in                	REAL
	,h_out               	REAL
	,h_delta             	REAL
);

DROP TABLE IF EXISTS public.water_totals;
CREATE TABLE public.water_totals (
	 measure_point_id    	INT         	NOT NULL
	,data_date           	TIMESTAMPTZ 	NOT NULL
	,v_in                	REAL
	,v_out               	REAL
	,m_in                	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,h_delta             	REAL
	,normal_operation_duration	REAL
	,flags               	INT         	NOT NULL
	,calculated_values   	INT
	,bad_values          	INT
	,resetted_values     	INT
	,interpolated_values 	INT
	,stop_duration       	REAL
	,flow_underrun_duration	REAL
	,flow_overrun_duration	REAL
	,temp_diff_low_duration	REAL
	,no_power_duration   	REAL
	,incident_duration   	REAL
	,saturated_steam_duration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
);


-- ROLLBACK;

COMMIT;
