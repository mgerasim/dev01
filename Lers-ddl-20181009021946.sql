/**
	Scripted by Migrate2Postgres 1.0.7 on Tue, 9 Oct 2018 02:19:47 +0300

	Migrate2Postgres Copyright (C) 2018 Igal Sapir
	This program comes with ABSOLUTELY NO WARRANTY;
	This is free software, and you are welcome to redistribute it
	under certain conditions;
	See https://www.gnu.org/licenses/gpl-3.0.txt for details
	
	Available at https://github.com/isapir/Migrate2Postgres
**/

BEGIN TRANSACTION;

CREATE SCHEMA IF NOT EXISTS public;


DROP TABLE IF EXISTS public.accessright;
CREATE TABLE public.accessright (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,constname           	TEXT        	NOT NULL
	,grouptitle          	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.account;
CREATE TABLE public.account (
	 account_id          	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,account_login       	TEXT        	NOT NULL
	,account_displayname 	TEXT        	NOT NULL
	,account_disabled    	BOOLEAN     	NOT NULL
	,account_description 	TEXT        	NOT NULL
	,account_passwordsetdate	TIMESTAMPTZ 	NOT NULL
	,account_disableddate	TIMESTAMPTZ
	,account_expirationdate	TIMESTAMPTZ
	,account_sessiontimeout	INT         	NOT NULL
	,account_sessioncount	INT         	NOT NULL
	,account_ipaddressmode	BOOLEAN     	NOT NULL
	,account_lastlogindate	TIMESTAMPTZ
	,account_issystem    	BOOLEAN     	NOT NULL
	,mobilephone         	TEXT        	NOT NULL
	,email               	TEXT        	NOT NULL
	,smsemail            	TEXT        	NOT NULL
	,sendsmsviamodem     	BOOLEAN     	NOT NULL
	,notifystarttime     	INT         	NOT NULL
	,notifyendtime       	INT         	NOT NULL
	,password            	BYTEA       	NOT NULL
	,salt                	BYTEA       	NOT NULL
	,hasallnodeaccess    	BOOLEAN     	NOT NULL
	,startpage           	INT         	NOT NULL
	,tenantofficeonly    	BOOLEAN     	NOT NULL
	,allowallreports     	BOOLEAN     	NOT NULL
	,disablepasswordchange	BOOLEAN     	NOT NULL
	,passwordresettoken  	TEXT        	NOT NULL
	,passwordresettokenexpiredatetime	TIMESTAMPTZ
	,allowallmaps        	BOOLEAN     	NOT NULL
	,reportcenterformmode	INT         	NOT NULL  DEFAULT 0
	,usesendintervalforemail	BOOLEAN     	NOT NULL
	,authenticationmodes 	INT         	NOT NULL
	,windowssid          	TEXT
	,divisionid          	INT
	,loginnotallowed     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.accountgroup;
CREATE TABLE public.accountgroup (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,issystem            	BOOLEAN     	NOT NULL
	,divisionid          	INT
);

DROP TABLE IF EXISTS public.accountgroupmembership;
CREATE TABLE public.accountgroupmembership (
	 accountid           	INT         	NOT NULL
	,accountgroupid      	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountgrouppermissionex;
CREATE TABLE public.accountgrouppermissionex (
	 accountgroupid      	INT         	NOT NULL
	,accessrightid       	INT         	NOT NULL
	,isdenied            	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.accountlog;
CREATE TABLE public.accountlog (
	 date                	TIMESTAMPTZ 	NOT NULL
	,accountid           	INT         	NOT NULL
	,importance          	INT         	NOT NULL
	,message             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.accountmap;
CREATE TABLE public.accountmap (
	 accountid           	INT         	NOT NULL
	,mapid               	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountmeasurepoint;
CREATE TABLE public.accountmeasurepoint (
	 accountid           	INT         	NOT NULL
	,measurepointid      	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountnode;
CREATE TABLE public.accountnode (
	 accountid           	INT         	NOT NULL
	,nodeid              	INT         	NOT NULL
	,measurepointcheckaccessmode	INT         	NOT NULL
	,allowedsystemtypes  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountnodegroup;
CREATE TABLE public.accountnodegroup (
	 accountid           	INT         	NOT NULL
	,nodegroupid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountnotification;
CREATE TABLE public.accountnotification (
	 accountid           	INT         	NOT NULL
	,notificationid      	INT         	NOT NULL
	,isread              	BOOLEAN     	NOT NULL  DEFAULT false
);

DROP TABLE IF EXISTS public.accountnotificationincident;
CREATE TABLE public.accountnotificationincident (
	 accountid           	INT         	NOT NULL
	,incidenttypeid      	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountnotificationmethod;
CREATE TABLE public.accountnotificationmethod (
	 accountid           	INT         	NOT NULL
	,notificationtypeid  	INT         	NOT NULL
	,notificationmethodmask	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountnotificationnode;
CREATE TABLE public.accountnotificationnode (
	 accountid           	INT         	NOT NULL
	,notificationtypeid  	INT         	NOT NULL
	,nodeid              	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountnotificationnodejobtype;
CREATE TABLE public.accountnotificationnodejobtype (
	 accountid           	INT         	NOT NULL
	,nodejobtype         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountpermissionex;
CREATE TABLE public.accountpermissionex (
	 accountid           	INT         	NOT NULL
	,accessrightid       	INT         	NOT NULL
	,isdenied            	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.accountpersonalaccount;
CREATE TABLE public.accountpersonalaccount (
	 accountid           	INT         	NOT NULL
	,personalaccountid   	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountreport;
CREATE TABLE public.accountreport (
	 accountid           	INT         	NOT NULL
	,reportid            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.accountservicecompany;
CREATE TABLE public.accountservicecompany (
	 accountid           	INT         	NOT NULL
	,servicecompanyid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.adapter;
CREATE TABLE public.adapter (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,isaddressrequired   	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.balancegroup;
CREATE TABLE public.balancegroup (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT
);

DROP TABLE IF EXISTS public.balancegroupmeasurepoint;
CREATE TABLE public.balancegroupmeasurepoint (
	 balancegroupid      	INT         	NOT NULL
	,measurepointid      	INT         	NOT NULL
	,ishead              	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.cell;
CREATE TABLE public.cell (
	 id                  	INT         	NOT NULL
	,name                	TEXT        	NOT NULL
	,drivercode          	TEXT        	NOT NULL
	,devicedatatype      	INT         	NOT NULL
	,equipmentmodelid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.complex;
CREATE TABLE public.complex (
	 complex_responsedelay	INT         	NOT NULL  DEFAULT 0
	,complex_pollsessionid	INT
	,protocoltypeid      	INT
	,tag                 	BYTEA
	,adapterid           	INT
	,adapteraddress      	INT         	NOT NULL  DEFAULT 0
	,hardwareversion     	TEXT
	,firmwareversion     	TEXT
	,timedifference      	INT
	,batterylevel        	REAL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.contingency;
CREATE TABLE public.contingency (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,measurepointid      	INT
	,nodeid              	INT         	NOT NULL
	,contingencytypeid   	INT         	NOT NULL
	,startdate           	TIMESTAMPTZ 	NOT NULL
	,enddate             	TIMESTAMPTZ 	NOT NULL
	,diagdate            	TIMESTAMPTZ 	NOT NULL
	,importance          	INT         	NOT NULL
	,isclosed            	BOOLEAN     	NOT NULL
	,description         	TEXT
	,smsmessage          	TEXT
	,equipmentid         	INT
	,datatype            	INT         	NOT NULL
	,distinction         	BYTEA
);

DROP TABLE IF EXISTS public.contingencylog;
CREATE TABLE public.contingencylog (
	 contingencyid       	INT         	NOT NULL
	,date                	TIMESTAMPTZ 	NOT NULL
	,message             	TEXT
	,shortmessage        	TEXT
);

DROP TABLE IF EXISTS public.contractconsumption;
CREATE TABLE public.contractconsumption (
	 measuredparameterid 	INT         	NOT NULL
	,year                	INT         	NOT NULL
	,jan                 	REAL          DEFAULT 0
	,feb                 	REAL          DEFAULT 0
	,mar                 	REAL          DEFAULT 0
	,apr                 	REAL          DEFAULT 0
	,may                 	REAL          DEFAULT 0
	,jun                 	REAL          DEFAULT 0
	,jul                 	REAL          DEFAULT 0
	,aug                 	REAL          DEFAULT 0
	,sep                 	REAL          DEFAULT 0
	,oct                 	REAL          DEFAULT 0
	,nov                 	REAL          DEFAULT 0
	,dec                 	REAL          DEFAULT 0
	,measurepointid      	INT         	NOT NULL
	,contractconsumptiontype	INT         	NOT NULL  DEFAULT 0
);

DROP TABLE IF EXISTS public.contractconsumptionlimit;
CREATE TABLE public.contractconsumptionlimit (
	 measurepointid      	INT         	NOT NULL
	,measuredparameterid 	INT         	NOT NULL
	,year                	INT         	NOT NULL
	,jan                 	REAL          DEFAULT 0
	,feb                 	REAL          DEFAULT 0
	,mar                 	REAL          DEFAULT 0
	,apr                 	REAL          DEFAULT 0
	,may                 	REAL          DEFAULT 0
	,jun                 	REAL          DEFAULT 0
	,jul                 	REAL          DEFAULT 0
	,aug                 	REAL          DEFAULT 0
	,sep                 	REAL          DEFAULT 0
	,oct                 	REAL          DEFAULT 0
	,nov                 	REAL          DEFAULT 0
	,dec                 	REAL          DEFAULT 0
	,contractconsumptiontype	INT         	NOT NULL  DEFAULT 0
);

DROP TABLE IF EXISTS public.contracttemperature;
CREATE TABLE public.contracttemperature (
	 nodeid              	INT         	NOT NULL
	,t_outdoor           	INT         	NOT NULL
	,t_in                	REAL        	NOT NULL
	,t_out               	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.countertotals;
CREATE TABLE public.countertotals (
	 equipmentid         	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,value1              	REAL        	NOT NULL
	,value2              	REAL        	NOT NULL
	,istrustedvalue      	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.customattribute;
CREATE TABLE public.customattribute (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,code                	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,entities            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.customer;
CREATE TABLE public.customer (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,isnaturalperson     	BOOLEAN     	NOT NULL
	,vatid               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.datainterface;
CREATE TABLE public.datainterface (
	 equipmentmodelid    	INT         	NOT NULL
	,portsettings        	TEXT        	NOT NULL
	,supportedportspeeds 	INT         	NOT NULL
	,supportedflowcontrols	INT         	NOT NULL
	,defaultpassword     	TEXT        	NOT NULL
	,passwordregex       	TEXT        	NOT NULL
	,passwordcomment     	TEXT        	NOT NULL
	,maxnetworksize      	INT         	NOT NULL
	,networkaddressdefault	TEXT        	NOT NULL
	,networkaddressusage 	INT         	NOT NULL
	,networkaddresscomment	TEXT        	NOT NULL
	,networkaddressregex 	TEXT        	NOT NULL
	,networkaddressrangemin	INT         	NOT NULL
	,networkaddressrangemax	INT         	NOT NULL
	,features            	INT         	NOT NULL
	,secondlevelpasswordcomment	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.dataparameter;
CREATE TABLE public.dataparameter (
	 id                  	INT         	NOT NULL
	,code                	TEXT        	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.datastatus;
CREATE TABLE public.datastatus (
	 measurepointid      	INT         	NOT NULL
	,devicedatatype      	INT         	NOT NULL
	,startdate           	TIMESTAMPTZ 	NOT NULL
	,enddate             	TIMESTAMPTZ 	NOT NULL
	,datastatus          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.deviceaddress;
CREATE TABLE public.deviceaddress (
	 address             	INT         	NOT NULL
	,measurepointid      	INT         	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,devicedatatype      	INT         	NOT NULL
	,unitid              	INT         	NOT NULL
	,archivedepth        	INT         	NOT NULL
	,equipmentid         	INT         	NOT NULL
	,multiplier          	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.devicecell;
CREATE TABLE public.devicecell (
	 cellid              	INT         	NOT NULL
	,measurepointid      	INT         	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,pulseratio          	REAL        	NOT NULL
	,unitid              	INT
	,datatype            	INT         	NOT NULL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.devicechannel;
CREATE TABLE public.devicechannel (
	 heatleadin          	INT         	NOT NULL
	,channelnumber       	INT         	NOT NULL
	,measurepointid      	INT         	NOT NULL
	,issupplychannel     	BOOLEAN     	NOT NULL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.deviceconfig;
CREATE TABLE public.deviceconfig (
	 datetime            	TIMESTAMPTZ 	NOT NULL
	,paramid             	INT         	NOT NULL
	,paramvalue          	TEXT        	NOT NULL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.deviceconfigparam;
CREATE TABLE public.deviceconfigparam (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,datatype            	VARCHAR(1)  	NOT NULL
	,generaldeviceconfigparamid	INT
	,comment             	TEXT        	NOT NULL
	,heatleadinnum       	INT
	,channelnum          	INT
	,readaddress         	INT
	,readdatatype        	INT
	,drivercode          	TEXT
	,equipmentmodelid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.devicedatatype;
CREATE TABLE public.devicedatatype (
	 id                  	INT         	NOT NULL
	,"desc"              	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.deviceevent;
CREATE TABLE public.deviceevent (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,startdatetime       	TIMESTAMPTZ
	,eventcode           	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,heatleadin          	INT         	NOT NULL
	,archivetype         	INT         	NOT NULL
	,channelnumber       	INT         	NOT NULL
	,enddatetime         	TIMESTAMPTZ
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.devicemeasurepoint;
CREATE TABLE public.devicemeasurepoint (
	 measurepointid      	INT         	NOT NULL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.division;
CREATE TABLE public.division (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.driverinterface;
CREATE TABLE public.driverinterface (
	 equipmentmodelid    	INT         	NOT NULL
	,drivername          	TEXT        	NOT NULL
	,driverstatus        	INT         	NOT NULL
	,channelcount        	INT         	NOT NULL
	,heatsystemcount     	INT         	NOT NULL
	,minmemoryaddress    	INT         	NOT NULL
	,maxmemoryaddress    	INT         	NOT NULL
	,features            	INT         	NOT NULL
	,supporteddatatypes  	INT         	NOT NULL
	,totalsresetthresholdm	REAL        	NOT NULL
	,totalsresetthresholdq	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.drycontactstate;
CREATE TABLE public.drycontactstate (
	 datetime            	TIMESTAMPTZ 	NOT NULL
	,value               	INT         	NOT NULL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.eavconsumptioncurrents;
CREATE TABLE public.eavconsumptioncurrents (
	 measurepointid      	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,isbad               	BOOLEAN     	NOT NULL
	,iscalc              	BOOLEAN     	NOT NULL
	,isinterpolated      	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eavconsumptionday;
CREATE TABLE public.eavconsumptionday (
	 measurepointid      	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,isbad               	BOOLEAN     	NOT NULL
	,iscalc              	BOOLEAN     	NOT NULL
	,isinterpolated      	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eavconsumptionhour;
CREATE TABLE public.eavconsumptionhour (
	 measurepointid      	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,isbad               	BOOLEAN     	NOT NULL
	,iscalc              	BOOLEAN     	NOT NULL
	,isinterpolated      	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eavconsumptionlast;
CREATE TABLE public.eavconsumptionlast (
	 measurepointid      	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,datatype            	INT         	NOT NULL
	,attributes          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.eavconsumptionlastvalue;
CREATE TABLE public.eavconsumptionlastvalue (
	 measurepointid      	INT         	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,isbad               	BOOLEAN     	NOT NULL
	,iscalc              	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eavconsumptionmonth;
CREATE TABLE public.eavconsumptionmonth (
	 measurepointid      	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,isbad               	BOOLEAN     	NOT NULL
	,iscalc              	BOOLEAN     	NOT NULL
	,isinterpolated      	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.eavtotalslast;
CREATE TABLE public.eavtotalslast (
	 measurepointid      	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,attributes          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.eavtotalslastvalue;
CREATE TABLE public.eavtotalslastvalue (
	 measurepointid      	INT         	NOT NULL
	,dataparameterid     	INT         	NOT NULL
	,value               	REAL        	NOT NULL
	,isbad               	BOOLEAN     	NOT NULL
	,iscalc              	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.electricconsumptionday;
CREATE TABLE public.electricconsumptionday (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,ap1                 	REAL
	,an1                 	REAL
	,rp1                 	REAL
	,rn1                 	REAL
	,ap2                 	REAL
	,an2                 	REAL
	,rp2                 	REAL
	,rn2                 	REAL
	,ap3                 	REAL
	,an3                 	REAL
	,rp3                 	REAL
	,rn3                 	REAL
	,ap4                 	REAL
	,an4                 	REAL
	,rp4                 	REAL
	,rn4                 	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,interpolatedvalues  	INT
	,normaloperationduration	REAL
);

DROP TABLE IF EXISTS public.electricconsumptionhour;
CREATE TABLE public.electricconsumptionhour (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,ap1                 	REAL
	,an1                 	REAL
	,rp1                 	REAL
	,rn1                 	REAL
	,ap2                 	REAL
	,an2                 	REAL
	,rp2                 	REAL
	,rn2                 	REAL
	,ap3                 	REAL
	,an3                 	REAL
	,rp3                 	REAL
	,rn3                 	REAL
	,ap4                 	REAL
	,an4                 	REAL
	,rp4                 	REAL
	,rn4                 	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,interpolatedvalues  	INT
	,normaloperationduration	REAL
);

DROP TABLE IF EXISTS public.electricconsumptionmonth;
CREATE TABLE public.electricconsumptionmonth (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,ap1                 	REAL
	,an1                 	REAL
	,rp1                 	REAL
	,rn1                 	REAL
	,ap2                 	REAL
	,an2                 	REAL
	,rp2                 	REAL
	,rn2                 	REAL
	,ap3                 	REAL
	,an3                 	REAL
	,rp3                 	REAL
	,rn3                 	REAL
	,ap4                 	REAL
	,an4                 	REAL
	,rp4                 	REAL
	,rn4                 	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,interpolatedvalues  	INT
	,normaloperationduration	REAL
);

DROP TABLE IF EXISTS public.electricpower;
CREATE TABLE public.electricpower (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,flags               	INT         	NOT NULL
	,interval            	INT         	NOT NULL
	,pp                  	REAL
	,pn                  	REAL
	,qp                  	REAL
	,qn                  	REAL
	,badvalues           	INT
);

DROP TABLE IF EXISTS public.electricpowerquality;
CREATE TABLE public.electricpowerquality (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,pp                  	REAL
	,pn                  	REAL
	,qp                  	REAL
	,qn                  	REAL
	,calculatedvalues    	BIGINT
	,badvalues           	BIGINT
	,s                   	REAL
	,sa                  	REAL
	,sb                  	REAL
	,sc                  	REAL
	,pa                  	REAL
	,pb                  	REAL
	,pc                  	REAL
	,qa                  	REAL
	,qb                  	REAL
	,qc                  	REAL
	,u                   	REAL
	,ua                  	REAL
	,ub                  	REAL
	,uc                  	REAL
	,i                   	REAL
	,ia                  	REAL
	,ib                  	REAL
	,ic                  	REAL
	,phiuab              	REAL
	,phiuac              	REAL
	,phiubc              	REAL
	,phiuia              	REAL
	,phiuib              	REAL
	,phiuic              	REAL
	,frequency           	REAL
	,p                   	REAL
	,q                   	REAL
	,cosphi              	REAL
	,cosphia             	REAL
	,cosphib             	REAL
	,cosphic             	REAL
);

DROP TABLE IF EXISTS public.electrictotals;
CREATE TABLE public.electrictotals (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,ap1                 	REAL
	,an1                 	REAL
	,rp1                 	REAL
	,rn1                 	REAL
	,ap2                 	REAL
	,an2                 	REAL
	,rp2                 	REAL
	,rn2                 	REAL
	,ap3                 	REAL
	,an3                 	REAL
	,rp3                 	REAL
	,rn3                 	REAL
	,ap4                 	REAL
	,an4                 	REAL
	,rp4                 	REAL
	,rn4                 	REAL
	,flags               	INT         	NOT NULL
	,calculatedvalues    	INT
	,badvalues           	INT
	,ap                  	REAL
	,an                  	REAL
	,rp                  	REAL
	,rn                  	REAL
	,resettedvalues      	INT
	,interpolatedvalues  	INT
	,normaloperationduration	REAL
);

DROP TABLE IF EXISTS public.equipment;
CREATE TABLE public.equipment (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,equipmentmodelid    	INT         	NOT NULL
	,serialnumber        	TEXT        	NOT NULL
	,lastcalibrationdate 	DATE
	,scheduledcalibrationdate	DATE
	,modificationid      	INT
	,password            	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,modemidentifier     	TEXT
	,modempollportid     	INT
	,modemimei           	TEXT
	,networkaddress      	TEXT
	,secondlevelpassword 	TEXT
	,isshared            	BOOLEAN     	NOT NULL
	,modemenablekeepalive	BOOLEAN
	,divisionid          	INT
);

DROP TABLE IF EXISTS public.equipmenthistory;
CREATE TABLE public.equipmenthistory (
	 id                  	BIGINT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,nodeid              	INT         	NOT NULL
	,measurepointid      	INT
	,action              	INT         	NOT NULL
	,equipmentmodelid    	INT         	NOT NULL
	,serialnumber        	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.equipmentmodel;
CREATE TABLE public.equipmentmodel (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,issystem            	BOOLEAN     	NOT NULL
	,longtitle           	TEXT        	NOT NULL
	,title               	TEXT        	NOT NULL
	,capabilities        	INT         	NOT NULL
	,comment             	TEXT        	NOT NULL
	,serialnumberformat  	TEXT        	NOT NULL
	,serialnumbercomment 	TEXT        	NOT NULL
	,stateregisternumber 	TEXT        	NOT NULL
	,calibrationinterval 	INT         	NOT NULL
	,istemperaturesensor 	BOOLEAN     	NOT NULL
	,ispressuresensor    	BOOLEAN     	NOT NULL
	,isflowsensor        	BOOLEAN     	NOT NULL
	,supportedsystemtypes	INT         	NOT NULL
	,supportedcommlinks  	INT         	NOT NULL
	,supportedcalltypes  	INT         	NOT NULL
	,modemfeatures       	INT         	NOT NULL
	,drycontactcount     	INT         	NOT NULL
	,iselectricmeter     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.equipmentmodeladapter;
CREATE TABLE public.equipmentmodeladapter (
	 equipmentmodelid    	INT         	NOT NULL
	,adapterid           	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipmentmodelmodification;
CREATE TABLE public.equipmentmodelmodification (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,equipmentmodelid    	INT         	NOT NULL
	,issystem            	BOOLEAN     	NOT NULL
	,comment             	TEXT        	NOT NULL
	,precisionclass      	TEXT        	NOT NULL
	,nominaldiameter     	INT         	NOT NULL
	,relativeerror       	REAL        	NOT NULL
	,tempsensormin       	REAL        	NOT NULL
	,tempsensormax       	REAL        	NOT NULL
	,presssensormin      	REAL        	NOT NULL
	,presssensormax      	REAL        	NOT NULL
	,flowsensormin       	REAL        	NOT NULL
	,flowsensormax       	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.equipmentmodelport;
CREATE TABLE public.equipmentmodelport (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,equipmentmodelid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipmentmodelportsettings;
CREATE TABLE public.equipmentmodelportsettings (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,equipmentmodelportid	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipmentpollconnection;
CREATE TABLE public.equipmentpollconnection (
	 equipmentid         	INT         	NOT NULL
	,nodeid              	INT         	NOT NULL
	,pollconnectionid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.equipmentpollstatistics;
CREATE TABLE public.equipmentpollstatistics (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,equipmentid         	INT         	NOT NULL
	,enddate             	TIMESTAMPTZ 	NOT NULL
	,pollresult          	INT         	NOT NULL
	,polltype            	INT         	NOT NULL
	,commlinktype        	INT         	NOT NULL
	,pollerrorcount      	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.gasconsumptioncurrent;
CREATE TABLE public.gasconsumptioncurrent (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,calculatedvalues    	INT
	,badvalues           	INT
	,t_outdoor           	REAL
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gasconsumptionday;
CREATE TABLE public.gasconsumptionday (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,normaloperationduration	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,t_outdoor           	REAL
	,interpolatedvalues  	INT
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gasconsumptionhour;
CREATE TABLE public.gasconsumptionhour (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,normaloperationduration	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,t_outdoor           	REAL
	,interpolatedvalues  	INT
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gasconsumptionmonth;
CREATE TABLE public.gasconsumptionmonth (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t                   	REAL
	,p                   	REAL
	,v                   	REAL
	,v_std               	REAL
	,normaloperationduration	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,t_outdoor           	REAL
	,interpolatedvalues  	INT
	,m                   	REAL
	,p_delta             	REAL
);

DROP TABLE IF EXISTS public.gastotals;
CREATE TABLE public.gastotals (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,v                   	REAL
	,v_std               	REAL
	,normaloperationduration	REAL
	,flags               	INT         	NOT NULL
	,calculatedvalues    	INT
	,badvalues           	INT
	,resettedvalues      	INT
	,interpolatedvalues  	INT
	,m                   	REAL
);

DROP TABLE IF EXISTS public.generaldeviceconfigparam;
CREATE TABLE public.generaldeviceconfigparam (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.gprscontrollersession;
CREATE TABLE public.gprscontrollersession (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,startdatetime       	TIMESTAMPTZ 	NOT NULL
	,enddatetime         	TIMESTAMPTZ
	,controllerclock     	TIMESTAMPTZ
	,signallevel         	INT
	,hardwareversion     	TEXT
	,firmwareversion     	TEXT
	,remoteipaddress     	TEXT        	NOT NULL
	,remoteport          	INT         	NOT NULL
	,balance             	REAL
	,bytessent           	BIGINT      	NOT NULL
	,bytesreceived       	BIGINT      	NOT NULL
	,iccid               	TEXT
	,activesim           	INT
	,simpinenabled       	BOOLEAN
	,equipmentid         	INT         	NOT NULL
	,endreason           	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.heatloss;
CREATE TABLE public.heatloss (
	 measurepointid      	INT         	NOT NULL
	,year                	INT         	NOT NULL
	,jan                 	REAL
	,feb                 	REAL
	,mar                 	REAL
	,apr                 	REAL
	,may                 	REAL
	,jun                 	REAL
	,jul                 	REAL
	,aug                 	REAL
	,sep                 	REAL
	,oct                 	REAL
	,nov                 	REAL
	,dec                 	REAL
	,percent             	REAL
	,hour                	REAL
);

DROP TABLE IF EXISTS public.incidenttype;
CREATE TABLE public.incidenttype (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.inspector;
CREATE TABLE public.inspector (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,name                	TEXT        	NOT NULL
	,post                	TEXT        	NOT NULL
	,phone               	TEXT        	NOT NULL
	,email               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,supplierid          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.ipaddress;
CREATE TABLE public.ipaddress (
	 accountid           	INT         	NOT NULL
	,rangestartip        	BIGINT      	NOT NULL
	,rangeendip          	BIGINT      	NOT NULL
);

DROP TABLE IF EXISTS public.limittemps;
CREATE TABLE public.limittemps (
	 tempin              	INT
	,t0                  	INT
	,t2                  	INT
	,t4                  	INT
	,t6                  	INT
	,t8                  	INT
	,t10                 	INT
	,t12                 	INT
	,t14                 	INT
	,t16                 	INT
	,t18                 	INT
	,t20                 	INT
	,t22                 	INT
	,t24                 	INT
	,t26                 	INT
	,t28                 	INT
	,t30                 	INT
	,t32                 	INT
);

DROP TABLE IF EXISTS public.maillist;
CREATE TABLE public.maillist (
	 taskid              	INT         	NOT NULL
	,sendsms             	BOOLEAN     	NOT NULL
	,sendemail           	BOOLEAN     	NOT NULL
	,accountid           	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.map;
CREATE TABLE public.map (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,ispublic            	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.mapimage;
CREATE TABLE public.mapimage (
	 checksum            	INT         	NOT NULL
	,image               	BYTEA       	NOT NULL
);

DROP TABLE IF EXISTS public.mapobject;
CREATE TABLE public.mapobject (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,mapid               	INT         	NOT NULL
	,mapobjecttypeid     	INT         	NOT NULL
	,measurepointid      	INT
	,x                   	INT         	NOT NULL
	,y                   	INT         	NOT NULL
	,dx                  	INT         	NOT NULL
	,dy                  	INT         	NOT NULL
	,text                	TEXT        	NOT NULL
	,tag                 	TEXT        	NOT NULL
	,image               	INT
	,parameter           	TEXT
	,locked              	BOOLEAN     	NOT NULL
	,zorder              	INT         	NOT NULL
	,nodesignalingid     	INT
);

DROP TABLE IF EXISTS public.mapobjectappearance;
CREATE TABLE public.mapobjectappearance (
	 mapobjectid         	INT         	NOT NULL
	,appearancetype      	INT         	NOT NULL
	,bordercolor         	INT         	NOT NULL
	,borderwidth         	INT         	NOT NULL
	,fillcolor           	INT         	NOT NULL
	,fontcolor           	INT         	NOT NULL
	,fontsize            	REAL        	NOT NULL
	,fontfamily          	TEXT        	NOT NULL
	,fontstyle           	INT         	NOT NULL
	,textvalignment      	INT         	NOT NULL
	,texthalignment      	INT         	NOT NULL
	,visible             	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.mapobjecttype;
CREATE TABLE public.mapobjecttype (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.measuredparameter;
CREATE TABLE public.measuredparameter (
	 measuredparameter_id	INT         	NOT NULL
	,measuredparameter_title	TEXT        	NOT NULL
	,measuredparameter_systemunitid	INT
	,measuredparameter_code	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.measurepoint;
CREATE TABLE public.measurepoint (
	 measurepoint_id     	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,measurepoint_title  	TEXT        	NOT NULL
	,measurepoint_servicenumber	INT         	NOT NULL
	,measurepoint_comment	TEXT        	NOT NULL
	,measurepoint_type   	INT         	NOT NULL
	,measurepoint_state  	INT         	NOT NULL  DEFAULT 0
	,measurepoint_selectedparamslist	TEXT        	NOT NULL
	,measurepoint_nodeid 	INT
	,measurepoint_systemtypeid	INT         	NOT NULL
	,autopollstartdate   	TIMESTAMPTZ
	,isdoublepipesystem  	BOOLEAN     	NOT NULL
	,personalaccountid   	INT
	,contractheat        	REAL        	NOT NULL
	,contractflow        	REAL        	NOT NULL
	,currentratio        	REAL        	NOT NULL
	,voltageratio        	REAL        	NOT NULL
	,contractpin         	REAL        	NOT NULL
	,contractpout        	REAL        	NOT NULL
	,contracttin         	REAL        	NOT NULL
	,contracttout        	REAL        	NOT NULL
	,showcalculateddata  	BOOLEAN     	NOT NULL
	,devicepressuretype  	INT         	NOT NULL
	,counterid           	INT
	,calculatemissingtotals	BOOLEAN     	NOT NULL
	,calculatemissingtotalsestimate	BOOLEAN     	NOT NULL
	,calculatemissinghourconsumption	INT         	NOT NULL
	,calculatemissingdayconsumption	INT         	NOT NULL
	,calculatemissingmonthconsumption	INT         	NOT NULL
	,calculatemissingvalues	BOOLEAN     	NOT NULL
	,reportinghour       	INT         	NOT NULL
	,reportingday        	INT         	NOT NULL
	,showbadvalues       	BOOLEAN     	NOT NULL
	,calculatemissingheatvalues	BOOLEAN     	NOT NULL
	,calculatedvaluesaveragingmode	INT         	NOT NULL
	,isreversibleflow    	BOOLEAN     	NOT NULL
	,reportinghourmode   	INT         	NOT NULL
	,isvirtual           	BOOLEAN     	NOT NULL
	,useadvancedtotalsinterpolation	BOOLEAN     	NOT NULL
	,diagdatatypes       	INT
	,displaypressuretype 	INT         	NOT NULL
	,admissiondate       	TIMESTAMPTZ
);

DROP TABLE IF EXISTS public.measurepointcustomattribute;
CREATE TABLE public.measurepointcustomattribute (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,customattributeid   	INT         	NOT NULL
	,measurepointid      	INT         	NOT NULL
	,value               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointdatacopysettings;
CREATE TABLE public.measurepointdatacopysettings (
	 targetmeasurepointid	INT         	NOT NULL
	,waterparameter      	INT         	NOT NULL
	,sourcemeasurepointid	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointdeviceerrorday;
CREATE TABLE public.measurepointdeviceerrorday (
	 measurepointid      	INT         	NOT NULL
	,archivetype         	INT         	NOT NULL
	,channelnumber       	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,eventcode           	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,duration            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointdeviceerrorhour;
CREATE TABLE public.measurepointdeviceerrorhour (
	 measurepointid      	INT         	NOT NULL
	,archivetype         	INT         	NOT NULL
	,channelnumber       	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,eventcode           	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,duration            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointdeviceerrormonth;
CREATE TABLE public.measurepointdeviceerrormonth (
	 measurepointid      	INT         	NOT NULL
	,archivetype         	INT         	NOT NULL
	,channelnumber       	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,eventcode           	INT         	NOT NULL
	,description         	TEXT        	NOT NULL
	,duration            	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointdiagdefaults;
CREATE TABLE public.measurepointdiagdefaults (
	 systemtypeid        	INT         	NOT NULL
	,incidenttypeid      	INT         	NOT NULL
	,isenabled           	BOOLEAN     	NOT NULL
	,value1              	REAL        	NOT NULL
	,value2              	REAL        	NOT NULL
	,issummermode        	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointdiagparams;
CREATE TABLE public.measurepointdiagparams (
	 measurepointid      	INT         	NOT NULL
	,incidenttypeid      	INT         	NOT NULL
	,isenabled           	BOOLEAN     	NOT NULL
	,value1              	REAL        	NOT NULL
	,value2              	REAL        	NOT NULL
	,issummermode        	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointexpression;
CREATE TABLE public.measurepointexpression (
	 measurepointid      	INT         	NOT NULL
	,dataparameter       	INT         	NOT NULL
	,expression          	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointorder;
CREATE TABLE public.measurepointorder (
	 measurepointid      	INT         	NOT NULL
	,ordernumber         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointreport;
CREATE TABLE public.measurepointreport (
	 measurepointid      	INT         	NOT NULL
	,reportid            	INT         	NOT NULL
	,reporttemplateid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.measurepointsensor;
CREATE TABLE public.measurepointsensor (
	 measurepointid      	INT         	NOT NULL
	,issupplychannel     	BOOLEAN     	NOT NULL
	,measuredparameterid 	INT         	NOT NULL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.messagelog;
CREATE TABLE public.messagelog (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,date                	TIMESTAMPTZ 	NOT NULL
	,senderaccountid     	INT
	,sendername          	TEXT        	NOT NULL
	,recipientname       	TEXT        	NOT NULL
	,recipientaddress    	TEXT        	NOT NULL
	,message             	VARCHAR     	NOT NULL
	,messagetype         	INT         	NOT NULL
	,sendresult          	TEXT        	NOT NULL
	,sendstate           	INT         	NOT NULL
	,sendscheduledate    	TIMESTAMPTZ 	NOT NULL
);

DROP TABLE IF EXISTS public.modemcommand;
CREATE TABLE public.modemcommand (
	 modemcommand_modemtypeid	INT         	NOT NULL
	,modemcommand_modemcommandtypeid	INT         	NOT NULL
	,modemcommand_text   	TEXT        	NOT NULL
	,modemcommand_terminationtype	INT         	NOT NULL  DEFAULT 2
	,modemcommand_delaybefore	INT         	NOT NULL
	,modemcommand_timeout	INT         	NOT NULL
	,modemcommand_badanswerlist	TEXT        	NOT NULL
	,modemcommand_goodanswerlist	TEXT        	NOT NULL
	,modemcommand_comment	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.modemcommandtype;
CREATE TABLE public.modemcommandtype (
	 modemcommandtype_id 	INT         	NOT NULL
	,modemcommandtype_title	TEXT        	NOT NULL
	,modemcommandtype_code	TEXT        	NOT NULL
	,modemcommandtype_comment	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.modemtype;
CREATE TABLE public.modemtype (
	 modemtype_id        	INT         	NOT NULL
	,modemtype_title     	TEXT        	NOT NULL
	,modemtype_communicationlinktype	INT         	NOT NULL
	,modemtype_datatransferdelay	INT         	NOT NULL
	,modemtype_portsettings	TEXT        	NOT NULL
	,modemtype_maxcommandlen	INT         	NOT NULL
	,modemtype_shieldcode	INT
);

DROP TABLE IF EXISTS public.nestedbalancegroups;
CREATE TABLE public.nestedbalancegroups (
	 parentid            	INT         	NOT NULL
	,childid             	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.node;
CREATE TABLE public.node (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,address             	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,number              	INT         	NOT NULL
	,customerid          	INT
	,responsiblename     	TEXT        	NOT NULL
	,responsiblephone    	TEXT        	NOT NULL
	,servicecompanyid    	INT
	,state               	INT         	NOT NULL
	,servicemanid        	INT
	,type                	INT         	NOT NULL
	,normcoldwater       	REAL        	NOT NULL
	,normhotwater        	REAL        	NOT NULL
	,normheat            	REAL        	NOT NULL
	,normelectricity     	REAL        	NOT NULL
	,normgas             	REAL        	NOT NULL
	,iscommunalpollenabled	BOOLEAN     	NOT NULL
	,timezoneoffset      	INT         	NOT NULL
	,coldwatertemp       	REAL        	NOT NULL
	,licensecount        	INT         	NOT NULL
	,contractmintemp     	INT         	NOT NULL  DEFAULT 70
	,contractmaxtemp     	INT         	NOT NULL  DEFAULT 130
	,contractlowbreaktemp	INT         	NOT NULL  DEFAULT 0
	,contracthighbreaktemp	INT         	NOT NULL  DEFAULT 0
	,minoutdoortemp      	INT         	NOT NULL  -- DEFAULT ((-31))
	,temperaturecomplianceanalysistype	INT         	NOT NULL  DEFAULT 0
	,territoryid         	INT         	NOT NULL  DEFAULT 0
	,divisionid          	INT
);

DROP TABLE IF EXISTS public.nodebalance;
CREATE TABLE public.nodebalance (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,nodeid              	INT         	NOT NULL
	,symbol              	TEXT        	NOT NULL
	,expression          	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.nodecustomattribute;
CREATE TABLE public.nodecustomattribute (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,nodeid              	INT         	NOT NULL
	,customattributeid   	INT         	NOT NULL
	,value               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.nodediagdefaults;
CREATE TABLE public.nodediagdefaults (
	 incidenttypeid      	INT         	NOT NULL
	,isenabled           	BOOLEAN     	NOT NULL
	,value1              	REAL        	NOT NULL
	,value2              	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.nodediagparams;
CREATE TABLE public.nodediagparams (
	 nodeid              	INT         	NOT NULL
	,incidenttypeid      	INT         	NOT NULL
	,isenabled           	BOOLEAN     	NOT NULL
	,value1              	REAL        	NOT NULL
	,value2              	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.nodeequipment;
CREATE TABLE public.nodeequipment (
	 nodeid              	INT         	NOT NULL
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.nodefile;
CREATE TABLE public.nodefile (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,nodeid              	INT         	NOT NULL
	,filename            	TEXT        	NOT NULL
	,creationtime        	TIMESTAMPTZ 	NOT NULL
	,lastwritetime       	TIMESTAMPTZ 	NOT NULL
	,content             	BYTEA       	NOT NULL
	,hash                	BYTEA       	NOT NULL
	,publicfile          	BOOLEAN     	NOT NULL  DEFAULT true
	,thumbnail           	BYTEA
	,length              	BIGINT        -- COMPUTED (datalength([Content]))
);

DROP TABLE IF EXISTS public.nodegeolocation;
CREATE TABLE public.nodegeolocation (
	 nodeid              	INT         	NOT NULL
	,latitude            	REAL        	NOT NULL
	,longitude           	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.nodegroup;
CREATE TABLE public.nodegroup (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,divisionid          	INT
);

DROP TABLE IF EXISTS public.nodegroupmembership;
CREATE TABLE public.nodegroupmembership (
	 nodegroupid         	INT         	NOT NULL
	,nodeid              	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.nodejob;
CREATE TABLE public.nodejob (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,nodeid              	INT         	NOT NULL
	,measurepointid      	INT
	,creatoraccountid    	INT
	,creatorname         	TEXT        	NOT NULL  DEFAULT ''
	,performeraccountid  	INT
	,performername       	TEXT        	NOT NULL  DEFAULT ''
	,startdate           	DATE        	NOT NULL
	,scheduledenddate    	DATE        	NOT NULL
	,factenddate         	DATE
	,title               	TEXT        	NOT NULL
	,description         	TEXT        	NOT NULL  DEFAULT ''
	,state               	INT         	NOT NULL
	,type                	INT         	NOT NULL
	,resolutionid        	INT
	,incidentid          	INT
	,workordernumber     	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.nodejobcomment;
CREATE TABLE public.nodejobcomment (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,nodejobid           	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,accountid           	INT
	,accountname         	TEXT        	NOT NULL
	,text                	VARCHAR
);

DROP TABLE IF EXISTS public.nodejobfile;
CREATE TABLE public.nodejobfile (
	 nodejobid           	INT         	NOT NULL
	,nodefileid          	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.nodejobresolution;
CREATE TABLE public.nodejobresolution (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.nodepollconnection;
CREATE TABLE public.nodepollconnection (
	 pollconnectionid    	INT         	NOT NULL
	,nodeid              	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.nodereport;
CREATE TABLE public.nodereport (
	 nodeid              	INT         	NOT NULL
	,reportid            	INT         	NOT NULL
	,reporttemplateid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.nodeseasonhistory;
CREATE TABLE public.nodeseasonhistory (
	 nodeid              	INT         	NOT NULL
	,startdate           	DATE        	NOT NULL
	,isheatingseason     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.nodesignaling;
CREATE TABLE public.nodesignaling (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,nodeid              	INT         	NOT NULL
	,signaltitle         	TEXT        	NOT NULL
	,drycontactnumber    	INT         	NOT NULL
	,incidentimportanceset	INT         	NOT NULL
	,incidentmessageset  	TEXT        	NOT NULL
	,incidentimportanceunset	INT         	NOT NULL
	,incidentmessageunset	TEXT        	NOT NULL
	,currentstate        	INT         	NOT NULL  DEFAULT 0
	,equipmentid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.nodesupplier;
CREATE TABLE public.nodesupplier (
	 nodeid              	INT         	NOT NULL
	,systemtype          	INT         	NOT NULL
	,supplierid          	INT
	,contractnumber      	TEXT        	NOT NULL
	,contractdate        	TIMESTAMPTZ
	,inspectorid         	INT
);

DROP TABLE IF EXISTS public.nodeuserdiagparams;
CREATE TABLE public.nodeuserdiagparams (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,nodeid              	INT         	NOT NULL
	,expression          	VARCHAR     	NOT NULL
	,seasons             	INT         	NOT NULL
	,datatypes           	INT         	NOT NULL
	,message             	TEXT        	NOT NULL
	,enabled             	BOOLEAN     	NOT NULL
	,importance          	INT         	NOT NULL
	,shortmessage        	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.notification;
CREATE TABLE public.notification (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,notificationtypeid  	INT         	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,message             	TEXT        	NOT NULL
	,importance          	INT         	NOT NULL
	,expireddate         	DATE
	,equipmentid         	INT
	,incidentid          	INT
	,nodejobid           	INT
	,url                 	TEXT
	,measurepointid      	INT
);

DROP TABLE IF EXISTS public.notificationtype;
CREATE TABLE public.notificationtype (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.outdoortemperature;
CREATE TABLE public.outdoortemperature (
	 date                	TIMESTAMPTZ 	NOT NULL
	,value               	REAL        	NOT NULL
	,territoryid         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.personalaccount;
CREATE TABLE public.personalaccount (
	 personalaccount_id  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,personalaccount_number	TEXT        	NOT NULL
	,personalaccount_numberapartment	TEXT        	NOT NULL
	,personalaccount_numberresident	INT         	NOT NULL
	,personalaccount_areaapartment	REAL        	NOT NULL
	,nodeid              	INT         	NOT NULL
	,type                	INT         	NOT NULL
	,contracthotwater    	REAL        	NOT NULL
	,contractcoldwater   	REAL        	NOT NULL
	,contractgas         	REAL        	NOT NULL
	,contractelectricity 	REAL        	NOT NULL
	,contractheat        	REAL        	NOT NULL
	,contractconsumptiontype	INT         	NOT NULL
	,floornumber         	INT         	NOT NULL
	,roomcount           	INT         	NOT NULL
	,entrancenumber      	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.plugin;
CREATE TABLE public.plugin (
	 identifier          	CHAR(36)    	NOT NULL
	,filename            	TEXT        	NOT NULL
	,isdisabled          	BOOLEAN     	NOT NULL
	,settings            	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.pollconnection;
CREATE TABLE public.pollconnection (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,commlinktype        	INT         	NOT NULL
	,pollportid          	INT
	,pollportgroupid     	INT
	,commdeviceequipmentid	INT
	,commdeviceportid    	INT
	,commdeviceportsettingsid	INT
	,connectiontimeout   	INT
	,dialnumber          	TEXT
	,commlinkprotocol    	INT         	NOT NULL
	,gprscalltype        	INT         	NOT NULL
	,gprsautodisconnect  	BOOLEAN     	NOT NULL
	,internethost        	TEXT        	NOT NULL
	,internetport        	INT         	NOT NULL
	,imitatemodem        	BOOLEAN     	NOT NULL
	,portspeed           	INT         	NOT NULL
	,flowcontrol         	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.pollport;
CREATE TABLE public.pollport (
	 pollport_id         	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,pollport_portnumber 	INT         	NOT NULL
	,pollport_enabled    	BOOLEAN     	NOT NULL
	,pollport_title      	TEXT        	NOT NULL
	,pollport_dialprefix 	TEXT        	NOT NULL
	,pollport_communicationlinktype	INT         	NOT NULL
	,pollport_modemtypeid	INT         	NOT NULL
	,gprslistenipaddress 	TEXT        	NOT NULL
	,gprslistenport      	INT         	NOT NULL
	,maxconnectionscount 	INT         	NOT NULL
	,softwarecarriercontrol	BOOLEAN     	NOT NULL
	,comment             	TEXT        	NOT NULL
	,pollportgroupid     	INT
	,billingmodel        	INT         	NOT NULL
	,tariffplanincludedminutes	INT         	NOT NULL
	,pollserviceid       	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.pollportgroup;
CREATE TABLE public.pollportgroup (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.pollportstatistics;
CREATE TABLE public.pollportstatistics (
	 pollportid          	INT         	NOT NULL
	,date                	DATE        	NOT NULL
	,callcount           	INT         	NOT NULL
	,totalcallsduration  	INT         	NOT NULL
	,traffic             	BIGINT      	NOT NULL
);

DROP TABLE IF EXISTS public.pollservice;
CREATE TABLE public.pollservice (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,ipaddress           	TEXT        	NOT NULL
	,debugenabled        	BOOLEAN     	NOT NULL
	,token               	TEXT
);

DROP TABLE IF EXISTS public.pollsession;
CREATE TABLE public.pollsession (
	 pollsession_id      	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,pollsession_clientsessionid	INT         	NOT NULL
	,pollsession_taskid  	INT
	,pollsession_startdatetime	TIMESTAMPTZ 	NOT NULL
	,pollsession_enddatetime	TIMESTAMPTZ
	,pollsession_resultcode	INT
	,pollsession_communicationlinktype	INT         	NOT NULL
	,dialtime            	REAL        	NOT NULL
	,pollportid          	INT
	,nodeid              	INT
	,phonenumber         	TEXT        	NOT NULL
	,polltasktype        	INT         	NOT NULL
	,callduration        	INT         	NOT NULL
	,bytessent           	BIGINT      	NOT NULL
	,bytesreceived       	BIGINT      	NOT NULL
	,commequipmentid     	INT
	,pollconnectionid    	INT
);

DROP TABLE IF EXISTS public.pollsessionlog;
CREATE TABLE public.pollsessionlog (
	 pollsessionlog_pollsessionid	INT         	NOT NULL
	,pollsessionlog_datadate	TIMESTAMPTZ 	NOT NULL
	,pollsessionlog_type 	INT         	NOT NULL
	,pollsessionlog_message	VARCHAR     	NOT NULL
);

DROP TABLE IF EXISTS public.polltask;
CREATE TABLE public.polltask (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,description         	TEXT        	NOT NULL  DEFAULT ''
	,startdatetime       	TIMESTAMPTZ 	NOT NULL
	,enddatetime         	TIMESTAMPTZ 	NOT NULL
	,executionstate      	INT         	NOT NULL  DEFAULT 1
	,maxattempts         	INT         	NOT NULL  DEFAULT 1
	,attempt             	INT         	NOT NULL  DEFAULT 0
	,lastattempttime     	TIMESTAMPTZ
	,lastattemptresultcode	INT
	,nextattemptdelay    	INT         	NOT NULL  DEFAULT 3600
	,freqtype            	INT         	NOT NULL  DEFAULT 4
	,freqinterval        	INT         	NOT NULL  DEFAULT 1
	,starttime           	INT         	NOT NULL  DEFAULT 0
	,retryinterval       	INT         	NOT NULL  DEFAULT 0
	,endtime             	INT         	NOT NULL  DEFAULT 1439
	,pollintervalstartdate	TIMESTAMPTZ
	,pollintervalenddate 	TIMESTAMPTZ
	,pollinstantinterval 	INT         	NOT NULL  DEFAULT 10
	,remoteconsolemode   	BOOLEAN     	NOT NULL  DEFAULT false
	,lastattemptendtime  	TIMESTAMPTZ
	,priority            	INT         	NOT NULL  DEFAULT 3
	,type                	INT         	NOT NULL
	,loadabsentdataonly  	BOOLEAN     	NOT NULL
	,pollconnectionid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.polltaskmeasurepoint;
CREATE TABLE public.polltaskmeasurepoint (
	 taskid              	INT         	NOT NULL
	,measurepointid      	INT         	NOT NULL
	,performtimecorrection	BOOLEAN     	NOT NULL
	,requesteddatamask   	INT         	NOT NULL
	,backupconnectionid  	INT
	,backuplastpolldate  	TIMESTAMPTZ
	,backupstarttime     	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.preparedreport;
CREATE TABLE public.preparedreport (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,generationdatetime  	TIMESTAMPTZ 	NOT NULL
	,reporttitle         	TEXT        	NOT NULL
	,templatetitle       	TEXT        	NOT NULL
	,reporttype          	INT         	NOT NULL
	,reportentity        	INT         	NOT NULL
	,nodeid              	INT
	,measurepointid      	INT
	,datatype            	INT         	NOT NULL
	,startdate           	TIMESTAMPTZ 	NOT NULL
	,enddate             	TIMESTAMPTZ 	NOT NULL
	,data                	BYTEA       	NOT NULL
	,thumbnail           	BYTEA       	NOT NULL
	,filename            	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.protocoltype;
CREATE TABLE public.protocoltype (
	 id                  	INT         	NOT NULL
	,number              	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
	,equipmentmodelid    	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.report;
CREATE TABLE public.report (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,issystem            	BOOLEAN     	NOT NULL
	,datatype            	INT         	NOT NULL
	,reporttype          	INT         	NOT NULL
	,periodstartday      	INT         	NOT NULL
	,periodstartmonth    	INT         	NOT NULL
	,periodendday        	INT         	NOT NULL
	,periodendmonth      	INT         	NOT NULL
	,periodtype          	INT         	NOT NULL
	,reportentity        	INT         	NOT NULL
	,reporttemplateid    	INT
	,filenameformat      	TEXT        	NOT NULL  DEFAULT ''
	,usereportparameter  	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.reportfixednode;
CREATE TABLE public.reportfixednode (
	 reporttemplateid    	INT         	NOT NULL
	,nodeid              	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.reportgeneratingtasknode;
CREATE TABLE public.reportgeneratingtasknode (
	 taskid              	INT         	NOT NULL
	,nodeid              	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.reportgeneratingtasksettings;
CREATE TABLE public.reportgeneratingtasksettings (
	 taskid              	INT         	NOT NULL
	,measurepointsystems 	INT         	NOT NULL
	,reportid            	INT         	NOT NULL
	,mailingfileformat   	INT         	NOT NULL
	,mailingfilesplitmode	INT         	NOT NULL
	,mailsubject         	TEXT        	NOT NULL
	,savereport          	BOOLEAN     	NOT NULL
	,mailingenabled      	BOOLEAN     	NOT NULL
	,mailmessage         	TEXT        	NOT NULL  DEFAULT ''
	,pdfexportproperties 	VARCHAR     	NOT NULL  DEFAULT ''
	,reportsavedirectory 	TEXT        	NOT NULL  DEFAULT ''
	,packattachments     	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.reportparameter;
CREATE TABLE public.reportparameter (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,reportid            	INT         	NOT NULL
	,reportparameterpropertyid	INT         	NOT NULL
	,value               	TEXT        	NOT NULL  DEFAULT ''
);

DROP TABLE IF EXISTS public.reportparameterproperty;
CREATE TABLE public.reportparameterproperty (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,parametername       	TEXT        	NOT NULL
	,valuetype           	INT         	NOT NULL
	,comment             	TEXT        	NOT NULL
	,reporttype          	INT         	NOT NULL
	,reportentity        	INT         	NOT NULL
	,issystem            	BOOLEAN     	NOT NULL
);

DROP TABLE IF EXISTS public.reporttemplate;
CREATE TABLE public.reporttemplate (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
	,isuser              	BOOLEAN     	NOT NULL
	,datasourcemask      	BIGINT      	NOT NULL
	,text                	VARCHAR
	,reportentity        	INT         	NOT NULL
	,reporttype          	INT         	NOT NULL
	,measurepointcountheat	INT         	NOT NULL  DEFAULT 0
	,measurepointcounthotwater	INT         	NOT NULL  DEFAULT 0
	,measurepointcountcoldwater	INT         	NOT NULL  DEFAULT 0
	,measurepointcountsteam	INT         	NOT NULL  DEFAULT 0
	,measurepointcountgas	INT         	NOT NULL  DEFAULT 0
	,measurepointcountelectricity	INT         	NOT NULL  DEFAULT 0
	,buildnumber         	INT         	NOT NULL  DEFAULT 0
	,estimationalgorithm 	INT         	NOT NULL  DEFAULT 0
	,dailyaveragecalculatingperiod	INT         	NOT NULL  DEFAULT 0
	,devicemodel         	INT         	NOT NULL  DEFAULT 0
	,measurepointcountsewage	INT         	NOT NULL  DEFAULT 0
);

DROP TABLE IF EXISTS public.roomcontractconsumption;
CREATE TABLE public.roomcontractconsumption (
	 roomid              	INT         	NOT NULL
	,monthnumber         	INT         	NOT NULL
	,heatvalue           	REAL
	,hotwatervalue       	REAL
	,coldwatervalue      	REAL
	,electricityvalue    	REAL
);

DROP TABLE IF EXISTS public.roomcounter;
CREATE TABLE public.roomcounter (
	 equipmentid         	INT         	NOT NULL
	,roomid              	INT         	NOT NULL
	,initialtotalsvalue1 	REAL        	NOT NULL
	,initialtotalsvalue2 	REAL        	NOT NULL
	,initialtotalsdate   	TIMESTAMPTZ 	NOT NULL
	,installlocation     	TEXT        	NOT NULL
	,measurepointid      	INT
);

DROP TABLE IF EXISTS public.scmmeasurepoints;
CREATE TABLE public.scmmeasurepoints (
	 measurepointid      	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.servicecompany;
CREATE TABLE public.servicecompany (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,phone               	TEXT        	NOT NULL
	,licensenumber       	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.serviceman;
CREATE TABLE public.serviceman (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,name                	TEXT        	NOT NULL
	,servicecompanyid    	INT
	,phone               	TEXT        	NOT NULL  DEFAULT ''
	,email               	TEXT        	NOT NULL  DEFAULT ''
	,comment             	TEXT        	NOT NULL  DEFAULT ''
);

DROP TABLE IF EXISTS public.supplier;
CREATE TABLE public.supplier (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,title               	TEXT        	NOT NULL
	,systemtypemask      	INT         	NOT NULL
	,contacts            	TEXT        	NOT NULL
	,comment             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.systemlog;
CREATE TABLE public.systemlog (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,datetime            	TIMESTAMPTZ 	NOT NULL
	,importance          	INT         	NOT NULL
	,message             	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.systemparameters;
CREATE TABLE public.systemparameters (
	 logdebugmessages    	BOOLEAN     	NOT NULL
	,polllogstoragetime  	INT         	NOT NULL
	,systemlogstoragetime	INT         	NOT NULL
	,usersessionlogstoragetime	INT         	NOT NULL
	,accountlogstoragetime	INT         	NOT NULL
	,emaillogstoragetime 	INT         	NOT NULL
	,isautopollenabled   	BOOLEAN     	NOT NULL
	,pollloglevel        	INT         	NOT NULL
	,pollmaxduration     	INT         	NOT NULL
	,pollmaxtimediff     	INT         	NOT NULL
	,devicerequestretrycount	INT         	NOT NULL
	,pollportblockerrorcount	INT         	NOT NULL
	,pollportblocktimeout	INT         	NOT NULL
	,timecorrectionenabled	BOOLEAN     	NOT NULL
	,timecorrectionthreshold	INT         	NOT NULL
	,gsmmodemenabled     	BOOLEAN     	NOT NULL
	,gsmmodemcomportnumber	INT         	NOT NULL
	,gsmmodembaudrate    	INT         	NOT NULL
	,gsmmodemflowcontrol 	INT         	NOT NULL
	,defaultsupplypressure	INT         	NOT NULL
	,defaultreturnpressure	INT         	NOT NULL
	,defaultcoldwatertemp	REAL        	NOT NULL
	,pressuredisplaytype 	INT         	NOT NULL
	,storagetimecurrentdata	INT         	NOT NULL
	,maxpartcountinmultipartsms	INT         	NOT NULL
	,smtpserver          	TEXT        	NOT NULL
	,smtpport            	INT         	NOT NULL
	,smtpsenderaddress   	TEXT        	NOT NULL
	,smtpsenderdisplayname	TEXT        	NOT NULL
	,smtplogin           	TEXT        	NOT NULL
	,smtppassword        	TEXT        	NOT NULL
	,iscommunalenabled   	BOOLEAN     	NOT NULL
	,diagenabled         	BOOLEAN     	NOT NULL
	,diagdaydataenabled  	BOOLEAN     	NOT NULL
	,diaghourdataenabled 	BOOLEAN     	NOT NULL
	,diagcurrentdataenabled	BOOLEAN     	NOT NULL
	,storagetimemonthdata	INT         	NOT NULL
	,storagetimedaydata  	INT         	NOT NULL
	,storagetimehourdata 	INT         	NOT NULL
	,storagetimedeviceconfig	INT         	NOT NULL
	,storagetimedeviceevent	INT         	NOT NULL
	,storagetimepowerdata	INT         	NOT NULL
	,websiteaddress      	TEXT        	NOT NULL
	,smtpenablessl       	BOOLEAN     	NOT NULL
	,ignorenotalldatareaderror	BOOLEAN     	NOT NULL
	,backupdirectory     	TEXT        	NOT NULL  DEFAULT ''
	,updaterdatabasebackupmode	INT         	NOT NULL
	,storagetimetotalsdata	INT         	NOT NULL
	,backupcount         	INT         	NOT NULL
	,calibrationnotifydaycount	INT         	NOT NULL
	,jobduedatenotifydaycount	INT         	NOT NULL
	,allowsmsnotifications	BOOLEAN     	NOT NULL
	,gsmmodemmodelid     	INT         	NOT NULL
	,storagetimepreparedreports	INT         	NOT NULL
	,id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,storagetimeincidents	INT         	NOT NULL
	,storagetimegprssessions	INT         	NOT NULL
	,allowednodefileextensions	TEXT
	,minimumpasswordlength	INT         	NOT NULL
	,passwordmustcontainnumbers	BOOLEAN     	NOT NULL
	,passwordmustcontainuppercaseletters	BOOLEAN     	NOT NULL
	,passwordmustcontainlowercaseletters	BOOLEAN     	NOT NULL
	,passwordmustcontainspecialchars	BOOLEAN     	NOT NULL
	,gsmmodem_usesipforvoicecalls	BOOLEAN     	NOT NULL
	,gsmmodem_sipserveraddress	VARCHAR     	NOT NULL
	,gsmmodem_siplogin   	TEXT        	NOT NULL
	,gsmmodem_sippassword	TEXT        	NOT NULL
	,gsmmodem_sipfromdomain	VARCHAR     	NOT NULL
	,savegeneratedreporttodatabase	BOOLEAN     	NOT NULL
	,log_systemlog_gprsidenterror	BOOLEAN     	NOT NULL
	,log_systemlog_gprsmodemnotfound	BOOLEAN     	NOT NULL
	,log_systemlog_timecorrected	BOOLEAN     	NOT NULL
	,log_systemlog_reportprinted	BOOLEAN     	NOT NULL
	,log_systemlog_ratiodoesntmatch	BOOLEAN     	NOT NULL
	,log_systemlog_pollerror	BOOLEAN     	NOT NULL
	,log_systemlog_messagesent	BOOLEAN     	NOT NULL
	,log_systemlog_usersessionstarted	BOOLEAN     	NOT NULL
	,log_systemlog_authenticationerror	BOOLEAN     	NOT NULL
	,log_systemlog_incidentclosed	BOOLEAN     	NOT NULL
	,notification_admissiondatenotifydaycount	INT         	NOT NULL
	,storagetimenodeequipmenthistory	INT         	NOT NULL
	,poll_disableporterrorcount	INT         	NOT NULL
	,poll_rebootporterrorcount	INT         	NOT NULL
	,storagetimenotifications	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.systemtype;
CREATE TABLE public.systemtype (
	 id                  	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.task;
CREATE TABLE public.task (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,freqtype            	INT         	NOT NULL  DEFAULT 4
	,freqinterval        	INT         	NOT NULL  DEFAULT 1
	,starttime           	INT         	NOT NULL  DEFAULT 0
	,retryinterval       	INT         	NOT NULL  DEFAULT 0
	,endtime             	INT         	NOT NULL  DEFAULT 1439
	,title               	TEXT        	NOT NULL
	,enabled             	BOOLEAN     	NOT NULL  DEFAULT true
	,lastruntime         	TIMESTAMPTZ
	,lastresult          	BOOLEAN
	,lastresulterrormessage	TEXT        	NOT NULL  DEFAULT ''
	,startdatetime       	TIMESTAMPTZ 	NOT NULL  DEFAULT current_timestamp
	,type                	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.territory;
CREATE TABLE public.territory (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,parentid            	INT
	,name                	TEXT        	NOT NULL
	,timezoneoffset      	INT         	NOT NULL
	,outdoortempsourcemeasurepointid	INT
);

DROP TABLE IF EXISTS public.timezone;
CREATE TABLE public.timezone (
	 "offset"            	INT         	NOT NULL
	,title               	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.unit;
CREATE TABLE public.unit (
	 unit_id             	INT         	NOT NULL
	,unit_title          	TEXT        	NOT NULL
	,unit_comment        	TEXT        	NOT NULL
	,unit_measuredparameterid	INT         	NOT NULL
	,unit_code           	TEXT        	NOT NULL
	,unit_baseunitid     	INT         	NOT NULL
	,unit_multiplier     	REAL        	NOT NULL
);

DROP TABLE IF EXISTS public.usersessionlog;
CREATE TABLE public.usersessionlog (
	 id                  	INT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,accountid           	INT         	NOT NULL
	,accountlogin        	TEXT        	NOT NULL
	,accountdisplayname  	TEXT        	NOT NULL
	,ipaddress           	TEXT        	NOT NULL
	,startdatetime       	TIMESTAMPTZ 	NOT NULL
	,enddatetime         	TIMESTAMPTZ
	,exitcode            	INT         	NOT NULL
	,application         	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.usersessionrestoretoken;
CREATE TABLE public.usersessionrestoretoken (
	 id                  	BIGINT GENERATED BY DEFAULT AS IDENTITY	NOT NULL
	,accountid           	INT         	NOT NULL
	,expiredate          	TIMESTAMPTZ 	NOT NULL
	,restoretoken        	TEXT        	NOT NULL
	,creationdate        	TIMESTAMPTZ 	NOT NULL
	,originalipaddress   	TEXT        	NOT NULL
	,lastactivitydate    	TIMESTAMPTZ 	NOT NULL
	,application         	TEXT        	NOT NULL
);

DROP TABLE IF EXISTS public.version;
CREATE TABLE public.version (
	 build               	INT         	NOT NULL
	,version             	TEXT        	NOT NULL
	,date                	TIMESTAMPTZ 	NOT NULL
	,license             	BYTEA       	NOT NULL
	,lastmigrationbuild  	INT         	NOT NULL
);

DROP TABLE IF EXISTS public.waterconsumptioncurrent;
CREATE TABLE public.waterconsumptioncurrent (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,t_out               	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,m_in                	REAL
	,m_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,p_cw                	REAL
	,h_delta             	REAL
	,calculatedvalues    	INT
	,badvalues           	INT
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.waterconsumptionday;
CREATE TABLE public.waterconsumptionday (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,m_in                	REAL
	,t_out               	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,normaloperationduration	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,h_delta             	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,interpolatedvalues  	INT
	,stopduration        	REAL
	,flowunderrunduration	REAL
	,flowoverrunduration 	REAL
	,tempdifflowduration 	REAL
	,nopowerduration     	REAL
	,incidentduration    	REAL
	,saturatedsteamduration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.waterconsumptionhour;
CREATE TABLE public.waterconsumptionhour (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,m_in                	REAL
	,t_out               	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,normaloperationduration	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,h_delta             	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,interpolatedvalues  	INT
	,stopduration        	REAL
	,flowunderrunduration	REAL
	,flowoverrunduration 	REAL
	,tempdifflowduration 	REAL
	,nopowerduration     	REAL
	,incidentduration    	REAL
	,saturatedsteamduration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.waterconsumptionmonth;
CREATE TABLE public.waterconsumptionmonth (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,t_in                	REAL
	,m_in                	REAL
	,t_out               	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,p_in                	REAL
	,p_out               	REAL
	,v_in                	REAL
	,v_out               	REAL
	,normaloperationduration	REAL
	,t_cw                	REAL
	,t_outdoor           	REAL
	,h_delta             	REAL
	,attributes          	INT
	,calculatedvalues    	INT
	,badvalues           	INT
	,interpolatedvalues  	INT
	,stopduration        	REAL
	,flowunderrunduration	REAL
	,flowoverrunduration 	REAL
	,tempdifflowduration 	REAL
	,nopowerduration     	REAL
	,incidentduration    	REAL
	,saturatedsteamduration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
	,t_indoor            	REAL
);

DROP TABLE IF EXISTS public.waterestimatedconsumption;
CREATE TABLE public.waterestimatedconsumption (
	 measurepointid      	INT         	NOT NULL
	,previousmonth       	BOOLEAN     	NOT NULL
	,startdate           	TIMESTAMPTZ 	NOT NULL
	,estimationalgorithm 	INT         	NOT NULL  DEFAULT 1
	,enddate             	TIMESTAMPTZ 	NOT NULL
	,m_in                	REAL
	,m_out               	REAL
	,m_delta             	REAL
	,v_in                	REAL
	,v_out               	REAL
	,v_delta             	REAL
	,h_in                	REAL
	,h_out               	REAL
	,h_delta             	REAL
);

DROP TABLE IF EXISTS public.watertotals;
CREATE TABLE public.watertotals (
	 measurepointid      	INT         	NOT NULL
	,datadate            	TIMESTAMPTZ 	NOT NULL
	,v_in                	REAL
	,v_out               	REAL
	,m_in                	REAL
	,m_out               	REAL
	,h_in                	REAL
	,h_out               	REAL
	,h_delta             	REAL
	,normaloperationduration	REAL
	,flags               	INT         	NOT NULL
	,calculatedvalues    	INT
	,badvalues           	INT
	,resettedvalues      	INT
	,interpolatedvalues  	INT
	,stopduration        	REAL
	,flowunderrunduration	REAL
	,flowoverrunduration 	REAL
	,tempdifflowduration 	REAL
	,nopowerduration     	REAL
	,incidentduration    	REAL
	,saturatedsteamduration	REAL
	,v_delta             	REAL
	,m_delta             	REAL
);


-- ROLLBACK;

COMMIT;
